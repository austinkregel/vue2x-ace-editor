{"version":3,"sources":["webpack:///./node_modules/brace/mode/julia.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","JuliaHighlightRules","this","$rules","start","include","#bracket","token","regex","#comment","#function_call","#function_decl","#keyword","#number","#operator","#string","push","next","defaultToken","#string_custom_escaped_char","#string_escaped_char","#type_decl","normalizeRules","metaData","fileTypes","firstLineMatch","foldingStartMarker","foldingStopMarker","name","scopeName","inherits","Range","BaseFoldMode","FoldMode","commentRegex","RegExp","source","replace","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","$id"],"mappings":"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","file":"js/chunk-2d0c7ea7.a8152543.js","sourcesContent":["ace.define(\"ace/mode/julia_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar JuliaHighlightRules = function() {\n\n    this.$rules = { start: \n       [ { include: '#function_decl' },\n         { include: '#function_call' },\n         { include: '#type_decl' },\n         { include: '#keyword' },\n         { include: '#operator' },\n         { include: '#number' },\n         { include: '#string' },\n         { include: '#comment' } ],\n      '#bracket': \n       [ { token: 'keyword.bracket.julia',\n           regex: '\\\\(|\\\\)|\\\\[|\\\\]|\\\\{|\\\\}|,' } ],\n      '#comment': \n       [ { token: \n            [ 'punctuation.definition.comment.julia',\n              'comment.line.number-sign.julia' ],\n           regex: '(#)(?!\\\\{)(.*$)'} ],\n      '#function_call': \n       [ { token: [ 'support.function.julia', 'text' ],\n           regex: '([a-zA-Z0-9_]+!?)([\\\\w\\\\xff-\\\\u218e\\\\u2455-\\\\uffff]*\\\\()'} ],\n      '#function_decl': \n       [ { token: [ 'keyword.other.julia', 'meta.function.julia',\n               'entity.name.function.julia', 'meta.function.julia','text' ],\n           regex: '(function|macro)(\\\\s*)([a-zA-Z0-9_\\\\{]+!?)([\\\\w\\\\xff-\\\\u218e\\\\u2455-\\\\uffff]*)([(\\\\\\\\{])'} ],\n      '#keyword':\n       [ { token: 'keyword.other.julia',\n           regex: '\\\\b(?:function|type|immutable|macro|quote|abstract|bitstype|typealias|module|baremodule|new)\\\\b' },\n         { token: 'keyword.control.julia',\n           regex: '\\\\b(?:if|else|elseif|while|for|in|begin|let|end|do|try|catch|finally|return|break|continue)\\\\b' },\n         { token: 'storage.modifier.variable.julia',\n           regex: '\\\\b(?:global|local|const|export|import|importall|using)\\\\b' },\n         { token: 'variable.macro.julia', regex: '@[\\\\w\\\\xff-\\\\u218e\\\\u2455-\\\\uffff]+\\\\b' } ],\n      '#number': \n       [ { token: 'constant.numeric.julia',\n           regex: '\\\\b0(?:x|X)[0-9a-fA-F]*|(?:\\\\b[0-9]+\\\\.?[0-9]*|\\\\.[0-9]+)(?:(?:e|E)(?:\\\\+|-)?[0-9]*)?(?:im)?|\\\\bInf(?:32)?\\\\b|\\\\bNaN(?:32)?\\\\b|\\\\btrue\\\\b|\\\\bfalse\\\\b' } ],\n      '#operator': \n       [ { token: 'keyword.operator.update.julia',\n           regex: '=|:=|\\\\+=|-=|\\\\*=|/=|//=|\\\\.//=|\\\\.\\\\*=|\\\\\\\\=|\\\\.\\\\\\\\=|^=|\\\\.^=|%=|\\\\|=|&=|\\\\$=|<<=|>>=' },\n         { token: 'keyword.operator.ternary.julia', regex: '\\\\?|:' },\n         { token: 'keyword.operator.boolean.julia',\n           regex: '\\\\|\\\\||&&|!' },\n         { token: 'keyword.operator.arrow.julia', regex: '->|<-|-->' },\n         { token: 'keyword.operator.relation.julia',\n           regex: '>|<|>=|<=|==|!=|\\\\.>|\\\\.<|\\\\.>=|\\\\.>=|\\\\.==|\\\\.!=|\\\\.=|\\\\.!|<:|:>' },\n         { token: 'keyword.operator.range.julia', regex: ':' },\n         { token: 'keyword.operator.shift.julia', regex: '<<|>>' },\n         { token: 'keyword.operator.bitwise.julia', regex: '\\\\||\\\\&|~' },\n         { token: 'keyword.operator.arithmetic.julia',\n           regex: '\\\\+|-|\\\\*|\\\\.\\\\*|/|\\\\./|//|\\\\.//|%|\\\\.%|\\\\\\\\|\\\\.\\\\\\\\|\\\\^|\\\\.\\\\^' },\n         { token: 'keyword.operator.isa.julia', regex: '::' },\n         { token: 'keyword.operator.dots.julia',\n           regex: '\\\\.(?=[a-zA-Z])|\\\\.\\\\.+' },\n         { token: 'keyword.operator.interpolation.julia',\n           regex: '\\\\$#?(?=.)' },\n         { token: [ 'variable', 'keyword.operator.transposed-variable.julia' ],\n           regex: '([\\\\w\\\\xff-\\\\u218e\\\\u2455-\\\\uffff]+)((?:\\'|\\\\.\\')*\\\\.?\\')' },\n         { token: 'text',\n           regex: '\\\\[|\\\\('},\n         { token: [ 'text', 'keyword.operator.transposed-matrix.julia' ],\n            regex: \"([\\\\]\\\\)])((?:'|\\\\.')*\\\\.?')\"} ],\n      '#string': \n       [ { token: 'punctuation.definition.string.begin.julia',\n           regex: '\\'',\n           push: \n            [ { token: 'punctuation.definition.string.end.julia',\n                regex: '\\'',\n                next: 'pop' },\n              { include: '#string_escaped_char' },\n              { defaultToken: 'string.quoted.single.julia' } ] },\n         { token: 'punctuation.definition.string.begin.julia',\n           regex: '\"',\n           push: \n            [ { token: 'punctuation.definition.string.end.julia',\n                regex: '\"',\n                next: 'pop' },\n              { include: '#string_escaped_char' },\n              { defaultToken: 'string.quoted.double.julia' } ] },\n         { token: 'punctuation.definition.string.begin.julia',\n           regex: '\\\\b[\\\\w\\\\xff-\\\\u218e\\\\u2455-\\\\uffff]+\"',\n           push: \n            [ { token: 'punctuation.definition.string.end.julia',\n                regex: '\"[\\\\w\\\\xff-\\\\u218e\\\\u2455-\\\\uffff]*',\n                next: 'pop' },\n              { include: '#string_custom_escaped_char' },\n              { defaultToken: 'string.quoted.custom-double.julia' } ] },\n         { token: 'punctuation.definition.string.begin.julia',\n           regex: '`',\n           push: \n            [ { token: 'punctuation.definition.string.end.julia',\n                regex: '`',\n                next: 'pop' },\n              { include: '#string_escaped_char' },\n              { defaultToken: 'string.quoted.backtick.julia' } ] } ],\n      '#string_custom_escaped_char': [ { token: 'constant.character.escape.julia', regex: '\\\\\\\\\"' } ],\n      '#string_escaped_char': \n       [ { token: 'constant.character.escape.julia',\n           regex: '\\\\\\\\(?:\\\\\\\\|[0-3]\\\\d{,2}|[4-7]\\\\d?|x[a-fA-F0-9]{,2}|u[a-fA-F0-9]{,4}|U[a-fA-F0-9]{,8}|.)' } ],\n      '#type_decl': \n       [ { token: \n            [ 'keyword.control.type.julia',\n              'meta.type.julia',\n              'entity.name.type.julia',\n              'entity.other.inherited-class.julia',\n              'punctuation.separator.inheritance.julia',\n              'entity.other.inherited-class.julia' ],\n           regex: '(type|immutable)(\\\\s+)([a-zA-Z0-9_]+)(?:(\\\\s*)(<:)(\\\\s*[.a-zA-Z0-9_:]+))?' },\n         { token: [ 'other.typed-variable.julia', 'support.type.julia' ],\n           regex: '([a-zA-Z0-9_]+)(::[a-zA-Z0-9_{}]+)' } ] };\n    \n    this.normalizeRules();\n};\n\nJuliaHighlightRules.metaData = { fileTypes: [ 'jl' ],\n      firstLineMatch: '^#!.*\\\\bjulia\\\\s*$',\n      foldingStartMarker: '^\\\\s*(?:if|while|for|begin|function|macro|module|baremodule|type|immutable|let)\\\\b(?!.*\\\\bend\\\\b).*$',\n      foldingStopMarker: '^\\\\s*(?:end)\\\\b.*$',\n      name: 'Julia',\n      scopeName: 'source.julia' };\n\n\noop.inherits(JuliaHighlightRules, TextHighlightRules);\n\nexports.JuliaHighlightRules = JuliaHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/julia\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/julia_highlight_rules\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar JuliaHighlightRules = acequire(\"./julia_highlight_rules\").JuliaHighlightRules;\nvar FoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = JuliaHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"#\";\n    this.blockComment = \"\";\n    this.$id = \"ace/mode/julia\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"],"sourceRoot":""}
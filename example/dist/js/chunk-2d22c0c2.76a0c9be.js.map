{"version":3,"sources":["webpack:///./node_modules/brace/mode/gherkin.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","stringEscape","GherkinHighlightRules","languages","name","labels","keywords","map","l","join","this","$rules","start","token","regex","next","qqstring3","defaultToken","qqstring","table-item","normalizeRules","inherits","TextMode","Mode","HighlightRules","$behaviour","$defaultBehaviour","lineCommentStart","$id","getNextLineIndent","state","line","tab","indent","$getIndent","space2","tokenizedLine","getTokenizer","getLineTokens","tokens","console","log","match","length","type","call","prototype"],"mappings":"iGAAAA,IAAAC,OAAA,yHAAAC,EAAAC,EAAAC,GAEA,IAAAC,EAAAH,EAAA,cACAI,EAAAJ,EAAA,0BAAAI,mBACAC,EAAA,kFAEAC,EAAA,WACA,IAAAC,EAAA,EACAC,KAAA,KACAC,OAAA,oDACAC,SAAA,4BAGAD,EAAAF,EAAAI,IAAA,SAAAC,GACA,OAAAA,EAAAH,SACKI,KAAA,KACLH,EAAAH,EAAAI,IAAA,SAAAC,GACA,OAAAA,EAAAF,WACKG,KAAA,KACLC,KAAAC,OAAA,CACAC,MAAA,EACAC,MAAA,mBACAC,MAAA,2BACS,CACTD,MAAA,UACAC,MAAA,QACS,CACTD,MAAA,UACAC,MAAA,MAAAT,EAAA,SAAAC,EAAA,QACS,CACTO,MAAA,UACAC,MAAA,OACS,CACTD,MAAA,SACAC,MAAA,OACAC,KAAA,aACS,CACTF,MAAA,SACAC,MAAA,IACAC,KAAA,YACS,CACTF,MAAA,OACAC,MAAA,kBACAC,KAAA,EACAF,MAAA,OACAC,MAAA,QACa,CACbD,MAAA,qBACAC,MAAA,WACa,CACbD,MAAA,QACAC,MAAA,GACAC,KAAA,WAES,CACTF,MAAA,UACAC,MAAA,WACS,CACTD,MAAA,UACAC,MAAA,WACAC,KAAA,cACS,CACTF,MAAA,UACAC,MAAA,OACAC,KAAA,UAEAC,UAAA,EACAH,MAAA,2BACAC,MAAAb,GACS,CACTY,MAAA,SACAC,MAAA,OACAC,KAAA,SACS,CACTE,aAAA,WAEAC,SAAA,EACAL,MAAA,2BACAC,MAAAb,GACS,CACTY,MAAA,SACAC,MAAA,QACAC,KAAA,YACS,CACTF,MAAA,SACAC,MAAA,MACAC,KAAA,SACS,CACTE,aAAA,WAEAE,aAAA,EACAN,MAAA,UACAC,MAAA,IACAC,KAAA,SACS,CACTF,MAAA,UACAC,MAAA,MACS,CACTD,MAAA,SACAC,MAAA,OACS,CACTG,aAAA,YAGAP,KAAAU,kBAGArB,EAAAsB,SAAAnB,EAAAF,GAEAH,EAAAK,0BAGAR,IAAAC,OAAA,4HAAAC,EAAAC,EAAAC,GAEA,IAAAC,EAAAH,EAAA,cACA0B,EAAA1B,EAAA,UAAA2B,KACArB,EAAAN,EAAA,6BAAAM,sBAEAqB,EAAA,WACAb,KAAAc,eAAAtB,EACAQ,KAAAe,WAAAf,KAAAgB,mBAEA3B,EAAAsB,SAAAE,EAAAD,GAEA,WACAZ,KAAAiB,iBAAA,IACAjB,KAAAkB,IAAA,mBAEAlB,KAAAmB,kBAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAvB,KAAAwB,WAAAH,GACAI,EAAA,KAEAC,EAAA1B,KAAA2B,eAAAC,cAAAP,EAAAD,GACAS,EAAAH,EAAAG,OAQA,OANAC,QAAAC,IAAAX,GAEAC,EAAAW,MAAA,aACAT,GAAA,MAGAM,EAAAI,QAAA,WAAAJ,IAAAI,OAAA,GAAAC,KACAX,GAIA,SAAAH,IACAC,EAAAW,MAAA,oDACAT,GAAAE,EACaJ,EAAAW,MAAA,gCACbT,GAAAE,EACaJ,EAAAW,MAAA,WACbT,GAAA,OAKAA,KAECY,KAAAtB,EAAAuB,WAEDjD,EAAA0B","file":"js/chunk-2d22c0c2.76a0c9be.js","sourcesContent":["ace.define(\"ace/mode/gherkin_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\nvar stringEscape =  \"\\\\\\\\(x[0-9A-Fa-f]{2}|[0-7]{3}|[\\\\\\\\abfnrtv'\\\"]|U[0-9A-Fa-f]{8}|u[0-9A-Fa-f]{4})\";\n\nvar GherkinHighlightRules = function() {\n    var languages = [{\n        name: \"en\",\n        labels: \"Feature|Background|Scenario(?: Outline)?|Examples\",\n        keywords: \"Given|When|Then|And|But\"\n    }];\n    \n    var labels = languages.map(function(l) {\n        return l.labels;\n    }).join(\"|\");\n    var keywords = languages.map(function(l) {\n        return l.keywords;\n    }).join(\"|\");\n    this.$rules = {\n        start : [{\n            token: \"constant.numeric\",\n            regex: \"(?:(?:[1-9]\\\\d*)|(?:0))\"\n        }, {\n            token : \"comment\",\n            regex : \"#.*$\"\n        }, {\n            token : \"keyword\",\n            regex : \"(?:\" + labels + \"):|(?:\" + keywords + \")\\\\b\"\n        }, {\n            token : \"keyword\",\n            regex : \"\\\\*\"\n        }, {\n            token : \"string\",           // multi line \"\"\" string start\n            regex : '\"{3}',\n            next : \"qqstring3\"\n        }, {\n            token : \"string\",           // \" string\n            regex : '\"',\n            next : \"qqstring\"\n        }, {\n            token : \"text\",\n            regex : \"^\\\\s*(?=@[\\\\w])\",\n            next : [{\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }, {\n                token : \"variable.parameter\",\n                regex : \"@[\\\\w]+\"\n            }, {\n                token : \"empty\",\n                regex : \"\",\n                next : \"start\"\n            }]\n        }, {\n            token : \"comment\",\n            regex : \"<[^>]+>\"\n        }, {\n            token : \"comment\",\n            regex : \"\\\\|(?=.)\",\n            next : \"table-item\"\n        }, {\n            token : \"comment\",\n            regex : \"\\\\|$\",\n            next : \"start\"\n        }],\n        \"qqstring3\" : [ {\n            token : \"constant.language.escape\",\n            regex : stringEscape\n        }, {\n            token : \"string\", // multi line \"\"\" string end\n            regex : '\"{3}',\n            next : \"start\"\n        }, {\n            defaultToken : \"string\"\n        }],\n        \"qqstring\" : [{\n            token : \"constant.language.escape\",\n            regex : stringEscape\n        }, {\n            token : \"string\",\n            regex : \"\\\\\\\\$\",\n            next  : \"qqstring\"\n        }, {\n            token : \"string\",\n            regex : '\"|$',\n            next  : \"start\"\n        }, {\n            defaultToken: \"string\"\n        }],\n        \"table-item\" : [{\n            token : \"comment\",\n            regex : /$/,\n            next : \"start\"\n        }, {\n            token : \"comment\",\n            regex : /\\|/\n        }, {\n            token : \"string\",\n            regex : /\\\\./\n        }, {\n            defaultToken : \"string\"\n        }]\n    };\n    this.normalizeRules();\n};\n\noop.inherits(GherkinHighlightRules, TextHighlightRules);\n\nexports.GherkinHighlightRules = GherkinHighlightRules;\n});\n\nace.define(\"ace/mode/gherkin\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/gherkin_highlight_rules\"], function(acequire, exports, module) {\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar GherkinHighlightRules = acequire(\"./gherkin_highlight_rules\").GherkinHighlightRules;\n\nvar Mode = function() {\n    this.HighlightRules = GherkinHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \"#\";\n    this.$id = \"ace/mode/gherkin\";\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n        var space2 = \"  \";\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        \n        console.log(state);\n        \n        if(line.match(\"[ ]*\\\\|\")) {\n            indent += \"| \";\n        }\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n        \n\n        if (state == \"start\") {\n            if (line.match(\"Scenario:|Feature:|Scenario Outline:|Background:\")) {\n                indent += space2;\n            } else if(line.match(\"(Given|Then).+(:)$|Examples:\")) {\n                indent += space2;\n            } else if(line.match(\"\\\\*.+\")) {\n                indent += \"* \";\n            } \n        }\n        \n\n        return indent;\n    };\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"],"sourceRoot":""}
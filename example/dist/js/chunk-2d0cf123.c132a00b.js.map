{"version":3,"sources":["webpack:///./node_modules/brace/mode/svg.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","XmlHighlightRules","normalize","tagRegex","this","$rules","start","token","regex","next","caseInsensitive","include","defaultToken","processing_instruction","doctype","push","int_subset","cdata","comment","reference","attr_reference","tag","tag_whitespace","whitespace","string","attributes","attribute_value","constructor","normalizeRules","embedTagRules","HighlightRules","prefix","unshift","onMatch","value","currentState","stack","splice","embedRules","call","prototype","inherits","Behaviour","TokenIterator","is","type","lastIndexOf","XmlBehaviour","add","state","action","editor","session","text","quote","selected","doc","getTextRange","getSelectionRange","getWrapBehavioursEnabled","selection","cursor","getCursorPosition","line","getLine","row","rightChar","substring","column","iterator","getCurrentToken","stepBackward","rightSpace","match","range","isMultiLine","end","position","firstChar","charAt","lastChar","length","tokenEnd","getCurrentTokenColumn","stepForward","tokenRow","getCurrentTokenRow","tokenColumn","element","voidElements","hasOwnProperty","toLowerCase","indexOf","nextToken","getTokenAt","nextIndent","$getIndent","indent","getTabString","Range","BaseFoldMode","FoldMode","optionalEndTags","mixin","Tag","tagName","closing","selfClosing","getFoldWidget","foldStyle","_getFirstTagInLine","_findEndTagInLine","getCommentFoldWidget","test","getState","tokens","getTokens","i","startColumn","_readTagForward","_readTagBackward","_pop","top","pop","getFoldWidgetRange","firstTag","getCommentFoldRange","isBackward","fromPoints","lang","TextMode","Mode","XmlFoldMode","WorkerClient","$behaviour","foldingRules","arrayToMap","blockComment","createWorker","worker","__webpack_require__","attachToDocument","getDocument","on","e","setAnnotations","data","clearAnnotations","$id","DocCommentHighlightRules","getTagRule","getStartRule","getEndRule","identifierRe","JavaScriptHighlightRules","options","keywordMapper","createKeywordMapper","variable.language","keyword","storage.type","constant.language","support.function","constant.language.boolean","kwBeforeRe","escapedRe","no_regex","comments","property","regex_character_class","function_arguments","qqstring","consumeLineEnd","qstring","noES6","val","nextState","shift","jsx","JSX","replace","jsxTag","offset","slice","substr","jsxJsRule","jsxAttributes","stateName","MatchingBraceOutdent","checkOutdent","input","autoOutdent","openBracePos","findMatchingBracket","commentRegex","foldingStartMarker","RegExp","source","foldingStopMarker","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","fw","forceMultiline","getCommentRegionBlock","index","openingBracketBlock","getSectionRange","closingBracketBlock","startIndent","search","startRow","endRow","maxRow","getLength","subRange","re","depth","m","exec","CstyleBehaviour","CStyleFoldMode","$outdent","lineCommentStart","$quotes","\"","'","`","getNextLineIndent","tab","tokenizedLine","getTokenizer","getLineTokens","endState","results","SvgHighlightRules","defaultMode","subModes","$getMode","key","$tryMode","mode","XmlMode","JavaScriptMode","MixedFoldMode","createModeDelegates","js-"],"mappings":"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","file":"js/chunk-2d0cf123.c132a00b.js","sourcesContent":["ace.define(\"ace/mode/xml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar XmlHighlightRules = function(normalize) {\n    var tagRegex = \"[_:a-zA-Z\\xc0-\\uffff][-_:.a-zA-Z0-9\\xc0-\\uffff]*\";\n\n    this.$rules = {\n        start : [\n            {token : \"string.cdata.xml\", regex : \"<\\\\!\\\\[CDATA\\\\[\", next : \"cdata\"},\n            {\n                token : [\"punctuation.instruction.xml\", \"keyword.instruction.xml\"],\n                regex : \"(<\\\\?)(\" + tagRegex + \")\", next : \"processing_instruction\"\n            },\n            {token : \"comment.start.xml\", regex : \"<\\\\!--\", next : \"comment\"},\n            {\n                token : [\"xml-pe.doctype.xml\", \"xml-pe.doctype.xml\"],\n                regex : \"(<\\\\!)(DOCTYPE)(?=[\\\\s])\", next : \"doctype\", caseInsensitive: true\n            },\n            {include : \"tag\"},\n            {token : \"text.end-tag-open.xml\", regex: \"</\"},\n            {token : \"text.tag-open.xml\", regex: \"<\"},\n            {include : \"reference\"},\n            {defaultToken : \"text.xml\"}\n        ],\n\n        processing_instruction : [{\n            token : \"entity.other.attribute-name.decl-attribute-name.xml\",\n            regex : tagRegex\n        }, {\n            token : \"keyword.operator.decl-attribute-equals.xml\",\n            regex : \"=\"\n        }, {\n            include: \"whitespace\"\n        }, {\n            include: \"string\"\n        }, {\n            token : \"punctuation.xml-decl.xml\",\n            regex : \"\\\\?>\",\n            next : \"start\"\n        }],\n\n        doctype : [\n            {include : \"whitespace\"},\n            {include : \"string\"},\n            {token : \"xml-pe.doctype.xml\", regex : \">\", next : \"start\"},\n            {token : \"xml-pe.xml\", regex : \"[-_a-zA-Z0-9:]+\"},\n            {token : \"punctuation.int-subset\", regex : \"\\\\[\", push : \"int_subset\"}\n        ],\n\n        int_subset : [{\n            token : \"text.xml\",\n            regex : \"\\\\s+\"\n        }, {\n            token: \"punctuation.int-subset.xml\",\n            regex: \"]\",\n            next: \"pop\"\n        }, {\n            token : [\"punctuation.markup-decl.xml\", \"keyword.markup-decl.xml\"],\n            regex : \"(<\\\\!)(\" + tagRegex + \")\",\n            push : [{\n                token : \"text\",\n                regex : \"\\\\s+\"\n            },\n            {\n                token : \"punctuation.markup-decl.xml\",\n                regex : \">\",\n                next : \"pop\"\n            },\n            {include : \"string\"}]\n        }],\n\n        cdata : [\n            {token : \"string.cdata.xml\", regex : \"\\\\]\\\\]>\", next : \"start\"},\n            {token : \"text.xml\", regex : \"\\\\s+\"},\n            {token : \"text.xml\", regex : \"(?:[^\\\\]]|\\\\](?!\\\\]>))+\"}\n        ],\n\n        comment : [\n            {token : \"comment.end.xml\", regex : \"-->\", next : \"start\"},\n            {defaultToken : \"comment.xml\"}\n        ],\n\n        reference : [{\n            token : \"constant.language.escape.reference.xml\",\n            regex : \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n        }],\n\n        attr_reference : [{\n            token : \"constant.language.escape.reference.attribute-value.xml\",\n            regex : \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n        }],\n\n        tag : [{\n            token : [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.tag-name.xml\"],\n            regex : \"(?:(<)|(</))((?:\" + tagRegex + \":)?\" + tagRegex + \")\",\n            next: [\n                {include : \"attributes\"},\n                {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\", next : \"start\"}\n            ]\n        }],\n\n        tag_whitespace : [\n            {token : \"text.tag-whitespace.xml\", regex : \"\\\\s+\"}\n        ],\n        whitespace : [\n            {token : \"text.whitespace.xml\", regex : \"\\\\s+\"}\n        ],\n        string: [{\n            token : \"string.xml\",\n            regex : \"'\",\n            push : [\n                {token : \"string.xml\", regex: \"'\", next: \"pop\"},\n                {defaultToken : \"string.xml\"}\n            ]\n        }, {\n            token : \"string.xml\",\n            regex : '\"',\n            push : [\n                {token : \"string.xml\", regex: '\"', next: \"pop\"},\n                {defaultToken : \"string.xml\"}\n            ]\n        }],\n\n        attributes: [{\n            token : \"entity.other.attribute-name.xml\",\n            regex : tagRegex\n        }, {\n            token : \"keyword.operator.attribute-equals.xml\",\n            regex : \"=\"\n        }, {\n            include: \"tag_whitespace\"\n        }, {\n            include: \"attribute_value\"\n        }],\n\n        attribute_value: [{\n            token : \"string.attribute-value.xml\",\n            regex : \"'\",\n            push : [\n                {token : \"string.attribute-value.xml\", regex: \"'\", next: \"pop\"},\n                {include : \"attr_reference\"},\n                {defaultToken : \"string.attribute-value.xml\"}\n            ]\n        }, {\n            token : \"string.attribute-value.xml\",\n            regex : '\"',\n            push : [\n                {token : \"string.attribute-value.xml\", regex: '\"', next: \"pop\"},\n                {include : \"attr_reference\"},\n                {defaultToken : \"string.attribute-value.xml\"}\n            ]\n        }]\n    };\n\n    if (this.constructor === XmlHighlightRules)\n        this.normalizeRules();\n};\n\n\n(function() {\n\n    this.embedTagRules = function(HighlightRules, prefix, tag){\n        this.$rules.tag.unshift({\n            token : [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n            regex : \"(<)(\" + tag + \"(?=\\\\s|>|$))\",\n            next: [\n                {include : \"attributes\"},\n                {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\", next : prefix + \"start\"}\n            ]\n        });\n\n        this.$rules[tag + \"-end\"] = [\n            {include : \"attributes\"},\n            {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\",  next: \"start\",\n                onMatch : function(value, currentState, stack) {\n                    stack.splice(0);\n                    return this.token;\n            }}\n        ];\n\n        this.embedRules(HighlightRules, prefix, [{\n            token: [\"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n            regex : \"(</)(\" + tag + \"(?=\\\\s|>|$))\",\n            next: tag + \"-end\"\n        }, {\n            token: \"string.cdata.xml\",\n            regex : \"<\\\\!\\\\[CDATA\\\\[\"\n        }, {\n            token: \"string.cdata.xml\",\n            regex : \"\\\\]\\\\]>\"\n        }]);\n    };\n\n}).call(TextHighlightRules.prototype);\n\noop.inherits(XmlHighlightRules, TextHighlightRules);\n\nexports.XmlHighlightRules = XmlHighlightRules;\n});\n\nace.define(\"ace/mode/behaviour/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/behaviour\",\"ace/token_iterator\",\"ace/lib/lang\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Behaviour = acequire(\"../behaviour\").Behaviour;\nvar TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\nvar lang = acequire(\"../../lib/lang\");\n\nfunction is(token, type) {\n    return token.type.lastIndexOf(type + \".xml\") > -1;\n}\n\nvar XmlBehaviour = function () {\n\n    this.add(\"string_dquotes\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == '\"' || text == \"'\") {\n            var quote = text;\n            var selected = session.doc.getTextRange(editor.getSelectionRange());\n            if (selected !== \"\" && selected !== \"'\" && selected != '\"' && editor.getWrapBehavioursEnabled()) {\n                return {\n                    text: quote + selected + quote,\n                    selection: false\n                };\n            }\n\n            var cursor = editor.getCursorPosition();\n            var line = session.doc.getLine(cursor.row);\n            var rightChar = line.substring(cursor.column, cursor.column + 1);\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n\n            if (rightChar == quote && (is(token, \"attribute-value\") || is(token, \"string\"))) {\n                return {\n                    text: \"\",\n                    selection: [1, 1]\n                };\n            }\n\n            if (!token)\n                token = iterator.stepBackward();\n\n            if (!token)\n                return;\n\n            while (is(token, \"tag-whitespace\") || is(token, \"whitespace\")) {\n                token = iterator.stepBackward();\n            }\n            var rightSpace = !rightChar || rightChar.match(/\\s/);\n            if (is(token, \"attribute-equals\") && (rightSpace || rightChar == '>') || (is(token, \"decl-attribute-equals\") && (rightSpace || rightChar == '?'))) {\n                return {\n                    text: quote + quote,\n                    selection: [1, 1]\n                };\n            }\n        }\n    });\n\n    this.add(\"string_dquotes\", \"deletion\", function(state, action, editor, session, range) {\n        var selected = session.doc.getTextRange(range);\n        if (!range.isMultiLine() && (selected == '\"' || selected == \"'\")) {\n            var line = session.doc.getLine(range.start.row);\n            var rightChar = line.substring(range.start.column + 1, range.start.column + 2);\n            if (rightChar == selected) {\n                range.end.column++;\n                return range;\n            }\n        }\n    });\n\n    this.add(\"autoclosing\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == '>') {\n            var position = editor.getSelectionRange().start;\n            var iterator = new TokenIterator(session, position.row, position.column);\n            var token = iterator.getCurrentToken() || iterator.stepBackward();\n            if (!token || !(is(token, \"tag-name\") || is(token, \"tag-whitespace\") || is(token, \"attribute-name\") || is(token, \"attribute-equals\") || is(token, \"attribute-value\")))\n                return;\n            if (is(token, \"reference.attribute-value\"))\n                return;\n            if (is(token, \"attribute-value\")) {\n                var firstChar = token.value.charAt(0);\n                if (firstChar == '\"' || firstChar == \"'\") {\n                    var lastChar = token.value.charAt(token.value.length - 1);\n                    var tokenEnd = iterator.getCurrentTokenColumn() + token.value.length;\n                    if (tokenEnd > position.column || tokenEnd == position.column && firstChar != lastChar)\n                        return;\n                }\n            }\n            while (!is(token, \"tag-name\")) {\n                token = iterator.stepBackward();\n                if (token.value == \"<\") {\n                    token = iterator.stepForward();\n                    break;\n                }\n            }\n\n            var tokenRow = iterator.getCurrentTokenRow();\n            var tokenColumn = iterator.getCurrentTokenColumn();\n            if (is(iterator.stepBackward(), \"end-tag-open\"))\n                return;\n\n            var element = token.value;\n            if (tokenRow == position.row)\n                element = element.substring(0, position.column - tokenColumn);\n\n            if (this.voidElements.hasOwnProperty(element.toLowerCase()))\n                 return;\n\n            return {\n               text: \">\" + \"</\" + element + \">\",\n               selection: [1, 1]\n            };\n        }\n    });\n\n    this.add(\"autoindent\", \"insertion\", function (state, action, editor, session, text) {\n        if (text == \"\\n\") {\n            var cursor = editor.getCursorPosition();\n            var line = session.getLine(cursor.row);\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n\n            if (token && token.type.indexOf(\"tag-close\") !== -1) {\n                if (token.value == \"/>\")\n                    return;\n                while (token && token.type.indexOf(\"tag-name\") === -1) {\n                    token = iterator.stepBackward();\n                }\n\n                if (!token) {\n                    return;\n                }\n\n                var tag = token.value;\n                var row = iterator.getCurrentTokenRow();\n                token = iterator.stepBackward();\n                if (!token || token.type.indexOf(\"end-tag\") !== -1) {\n                    return;\n                }\n\n                if (this.voidElements && !this.voidElements[tag]) {\n                    var nextToken = session.getTokenAt(cursor.row, cursor.column+1);\n                    var line = session.getLine(row);\n                    var nextIndent = this.$getIndent(line);\n                    var indent = nextIndent + session.getTabString();\n\n                    if (nextToken && nextToken.value === \"</\") {\n                        return {\n                            text: \"\\n\" + indent + \"\\n\" + nextIndent,\n                            selection: [1, indent.length, 1, indent.length]\n                        };\n                    } else {\n                        return {\n                            text: \"\\n\" + indent\n                        };\n                    }\n                }\n            }\n        }\n    });\n\n};\n\noop.inherits(XmlBehaviour, Behaviour);\n\nexports.XmlBehaviour = XmlBehaviour;\n});\n\nace.define(\"ace/mode/folding/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/range\",\"ace/mode/folding/fold_mode\",\"ace/token_iterator\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar lang = acequire(\"../../lib/lang\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\nvar TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\n\nvar FoldMode = exports.FoldMode = function(voidElements, optionalEndTags) {\n    BaseFoldMode.call(this);\n    this.voidElements = voidElements || {};\n    this.optionalEndTags = oop.mixin({}, this.voidElements);\n    if (optionalEndTags)\n        oop.mixin(this.optionalEndTags, optionalEndTags);\n    \n};\noop.inherits(FoldMode, BaseFoldMode);\n\nvar Tag = function() {\n    this.tagName = \"\";\n    this.closing = false;\n    this.selfClosing = false;\n    this.start = {row: 0, column: 0};\n    this.end = {row: 0, column: 0};\n};\n\nfunction is(token, type) {\n    return token.type.lastIndexOf(type + \".xml\") > -1;\n}\n\n(function() {\n\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var tag = this._getFirstTagInLine(session, row);\n\n        if (!tag)\n            return this.getCommentFoldWidget(session, row);\n\n        if (tag.closing || (!tag.tagName && tag.selfClosing))\n            return foldStyle == \"markbeginend\" ? \"end\" : \"\";\n\n        if (!tag.tagName || tag.selfClosing || this.voidElements.hasOwnProperty(tag.tagName.toLowerCase()))\n            return \"\";\n\n        if (this._findEndTagInLine(session, row, tag.tagName, tag.end.column))\n            return \"\";\n\n        return \"start\";\n    };\n\n    this.getCommentFoldWidget = function(session, row) {\n        if (/comment/.test(session.getState(row)) && /<!-/.test(session.getLine(row)))\n            return \"start\";\n        return \"\";\n    };\n    this._getFirstTagInLine = function(session, row) {\n        var tokens = session.getTokens(row);\n        var tag = new Tag();\n\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            if (is(token, \"tag-open\")) {\n                tag.end.column = tag.start.column + token.value.length;\n                tag.closing = is(token, \"end-tag-open\");\n                token = tokens[++i];\n                if (!token)\n                    return null;\n                tag.tagName = token.value;\n                tag.end.column += token.value.length;\n                for (i++; i < tokens.length; i++) {\n                    token = tokens[i];\n                    tag.end.column += token.value.length;\n                    if (is(token, \"tag-close\")) {\n                        tag.selfClosing = token.value == '/>';\n                        break;\n                    }\n                }\n                return tag;\n            } else if (is(token, \"tag-close\")) {\n                tag.selfClosing = token.value == '/>';\n                return tag;\n            }\n            tag.start.column += token.value.length;\n        }\n\n        return null;\n    };\n\n    this._findEndTagInLine = function(session, row, tagName, startColumn) {\n        var tokens = session.getTokens(row);\n        var column = 0;\n        for (var i = 0; i < tokens.length; i++) {\n            var token = tokens[i];\n            column += token.value.length;\n            if (column < startColumn)\n                continue;\n            if (is(token, \"end-tag-open\")) {\n                token = tokens[i + 1];\n                if (token && token.value == tagName)\n                    return true;\n            }\n        }\n        return false;\n    };\n    this._readTagForward = function(iterator) {\n        var token = iterator.getCurrentToken();\n        if (!token)\n            return null;\n\n        var tag = new Tag();\n        do {\n            if (is(token, \"tag-open\")) {\n                tag.closing = is(token, \"end-tag-open\");\n                tag.start.row = iterator.getCurrentTokenRow();\n                tag.start.column = iterator.getCurrentTokenColumn();\n            } else if (is(token, \"tag-name\")) {\n                tag.tagName = token.value;\n            } else if (is(token, \"tag-close\")) {\n                tag.selfClosing = token.value == \"/>\";\n                tag.end.row = iterator.getCurrentTokenRow();\n                tag.end.column = iterator.getCurrentTokenColumn() + token.value.length;\n                iterator.stepForward();\n                return tag;\n            }\n        } while(token = iterator.stepForward());\n\n        return null;\n    };\n    \n    this._readTagBackward = function(iterator) {\n        var token = iterator.getCurrentToken();\n        if (!token)\n            return null;\n\n        var tag = new Tag();\n        do {\n            if (is(token, \"tag-open\")) {\n                tag.closing = is(token, \"end-tag-open\");\n                tag.start.row = iterator.getCurrentTokenRow();\n                tag.start.column = iterator.getCurrentTokenColumn();\n                iterator.stepBackward();\n                return tag;\n            } else if (is(token, \"tag-name\")) {\n                tag.tagName = token.value;\n            } else if (is(token, \"tag-close\")) {\n                tag.selfClosing = token.value == \"/>\";\n                tag.end.row = iterator.getCurrentTokenRow();\n                tag.end.column = iterator.getCurrentTokenColumn() + token.value.length;\n            }\n        } while(token = iterator.stepBackward());\n\n        return null;\n    };\n    \n    this._pop = function(stack, tag) {\n        while (stack.length) {\n            \n            var top = stack[stack.length-1];\n            if (!tag || top.tagName == tag.tagName) {\n                return stack.pop();\n            }\n            else if (this.optionalEndTags.hasOwnProperty(top.tagName)) {\n                stack.pop();\n                continue;\n            } else {\n                return null;\n            }\n        }\n    };\n    \n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var firstTag = this._getFirstTagInLine(session, row);\n        \n        if (!firstTag) {\n            return this.getCommentFoldWidget(session, row)\n                && session.getCommentFoldRange(row, session.getLine(row).length);\n        }\n        \n        var isBackward = firstTag.closing || firstTag.selfClosing;\n        var stack = [];\n        var tag;\n        \n        if (!isBackward) {\n            var iterator = new TokenIterator(session, row, firstTag.start.column);\n            var start = {\n                row: row,\n                column: firstTag.start.column + firstTag.tagName.length + 2\n            };\n            if (firstTag.start.row == firstTag.end.row)\n                start.column = firstTag.end.column;\n            while (tag = this._readTagForward(iterator)) {\n                if (tag.selfClosing) {\n                    if (!stack.length) {\n                        tag.start.column += tag.tagName.length + 2;\n                        tag.end.column -= 2;\n                        return Range.fromPoints(tag.start, tag.end);\n                    } else\n                        continue;\n                }\n                \n                if (tag.closing) {\n                    this._pop(stack, tag);\n                    if (stack.length == 0)\n                        return Range.fromPoints(start, tag.start);\n                }\n                else {\n                    stack.push(tag);\n                }\n            }\n        }\n        else {\n            var iterator = new TokenIterator(session, row, firstTag.end.column);\n            var end = {\n                row: row,\n                column: firstTag.start.column\n            };\n            \n            while (tag = this._readTagBackward(iterator)) {\n                if (tag.selfClosing) {\n                    if (!stack.length) {\n                        tag.start.column += tag.tagName.length + 2;\n                        tag.end.column -= 2;\n                        return Range.fromPoints(tag.start, tag.end);\n                    } else\n                        continue;\n                }\n                \n                if (!tag.closing) {\n                    this._pop(stack, tag);\n                    if (stack.length == 0) {\n                        tag.start.column += tag.tagName.length + 2;\n                        if (tag.start.row == tag.end.row && tag.start.column < tag.end.column)\n                            tag.start.column = tag.end.column;\n                        return Range.fromPoints(tag.start, end);\n                    }\n                }\n                else {\n                    stack.push(tag);\n                }\n            }\n        }\n        \n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/xml\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text\",\"ace/mode/xml_highlight_rules\",\"ace/mode/behaviour/xml\",\"ace/mode/folding/xml\",\"ace/worker/worker_client\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar lang = acequire(\"../lib/lang\");\nvar TextMode = acequire(\"./text\").Mode;\nvar XmlHighlightRules = acequire(\"./xml_highlight_rules\").XmlHighlightRules;\nvar XmlBehaviour = acequire(\"./behaviour/xml\").XmlBehaviour;\nvar XmlFoldMode = acequire(\"./folding/xml\").FoldMode;\nvar WorkerClient = acequire(\"../worker/worker_client\").WorkerClient;\n\nvar Mode = function() {\n   this.HighlightRules = XmlHighlightRules;\n   this.$behaviour = new XmlBehaviour();\n   this.foldingRules = new XmlFoldMode();\n};\n\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.voidElements = lang.arrayToMap([]);\n\n    this.blockComment = {start: \"<!--\", end: \"-->\"};\n\n    this.createWorker = function(session) {\n        var worker = new WorkerClient([\"ace\"], require(\"../worker/xml\"), \"Worker\");\n        worker.attachToDocument(session.getDocument());\n\n        worker.on(\"error\", function(e) {\n            session.setAnnotations(e.data);\n        });\n\n        worker.on(\"terminate\", function() {\n            session.clearAnnotations();\n        });\n\n        return worker;\n    };\n    \n    this.$id = \"ace/mode/xml\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\nace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DocCommentHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment.doc.tag\",\n            regex : \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n        }, \n        DocCommentHighlightRules.getTagRule(),\n        {\n            defaultToken : \"comment.doc\",\n            caseInsensitive: true\n        }]\n    };\n};\n\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\nDocCommentHighlightRules.getTagRule = function(start) {\n    return {\n        token : \"comment.doc.tag.storage.type\",\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\n\nDocCommentHighlightRules.getStartRule = function(start) {\n    return {\n        token : \"comment.doc\", // doc comment\n        regex : \"\\\\/\\\\*(?=\\\\*)\",\n        next  : start\n    };\n};\n\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token : \"comment.doc\", // closing comment\n        regex : \"\\\\*\\\\/\",\n        next  : start\n    };\n};\n\n\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/javascript_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\nvar identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\n\nvar JavaScriptHighlightRules = function(options) {\n    var keywordMapper = this.createKeywordMapper({\n        \"variable.language\":\n            \"Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|\"  + // Constructors\n            \"Namespace|QName|XML|XMLList|\"                                             + // E4X\n            \"ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|\"   +\n            \"Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|\"                    +\n            \"Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|\"   + // Errors\n            \"SyntaxError|TypeError|URIError|\"                                          +\n            \"decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|\" + // Non-constructor functions\n            \"isNaN|parseFloat|parseInt|\"                                               +\n            \"JSON|Math|\"                                                               + // Other\n            \"this|arguments|prototype|window|document\"                                 , // Pseudo\n        \"keyword\":\n            \"const|yield|import|get|set|async|await|\" +\n            \"break|case|catch|continue|default|delete|do|else|finally|for|function|\" +\n            \"if|in|of|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|\" +\n            \"__parent__|__count__|escape|unescape|with|__proto__|\" +\n            \"class|enum|extends|super|export|implements|private|public|interface|package|protected|static\",\n        \"storage.type\":\n            \"const|let|var|function\",\n        \"constant.language\":\n            \"null|Infinity|NaN|undefined\",\n        \"support.function\":\n            \"alert\",\n        \"constant.language.boolean\": \"true|false\"\n    }, \"identifier\");\n    var kwBeforeRe = \"case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void\";\n\n    var escapedRe = \"\\\\\\\\(?:x[0-9a-fA-F]{2}|\" + // hex\n        \"u[0-9a-fA-F]{4}|\" + // unicode\n        \"u{[0-9a-fA-F]{1,6}}|\" + // es6 unicode\n        \"[0-2][0-7]{0,2}|\" + // oct\n        \"3[0-7][0-7]?|\" + // oct\n        \"[4-7][0-7]?|\" + //oct\n        \".)\";\n\n    this.$rules = {\n        \"no_regex\" : [\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            comments(\"no_regex\"),\n            {\n                token : \"string\",\n                regex : \"'(?=.)\",\n                next  : \"qstring\"\n            }, {\n                token : \"string\",\n                regex : '\"(?=.)',\n                next  : \"qqstring\"\n            }, {\n                token : \"constant.numeric\", // hexadecimal, octal and binary\n                regex : /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n            }, {\n                token : \"constant.numeric\", // decimal integers and floats\n                regex : /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n            }, {\n                token : [\n                    \"storage.type\", \"punctuation.operator\", \"support.function\",\n                    \"punctuation.operator\", \"entity.name.function\", \"text\",\"keyword.operator\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\.)(prototype)(\\\\.)(\" + identifierRe +\")(\\\\s*)(=)\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\",\n                    \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe +\")(\\\\s*)(=)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\",\n                    \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe +\")(\\\\s*)(=)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\",\n                    \"keyword.operator\", \"text\",\n                    \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe +\")(\\\\s*)(=)(\\\\s*)(function)(\\\\s+)(\\\\w+)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(function)(\\\\s+)(\" + identifierRe + \")(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"entity.name.function\", \"text\", \"punctuation.operator\",\n                    \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\s*)(:)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"text\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(:)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : \"keyword\",\n                regex : \"from(?=\\\\s*('|\\\"))\"\n            }, {\n                token : \"keyword\",\n                regex : \"(?:\" + kwBeforeRe + \")\\\\b\",\n                next : \"start\"\n            }, {\n                token : [\"support.constant\"],\n                regex : /that\\b/\n            }, {\n                token : [\"storage.type\", \"punctuation.operator\", \"support.function.firebug\"],\n                regex : /(console)(\\.)(warn|info|log|error|time|trace|timeEnd|assert)\\b/\n            }, {\n                token : keywordMapper,\n                regex : identifierRe\n            }, {\n                token : \"punctuation.operator\",\n                regex : /[.](?![.])/,\n                next  : \"property\"\n            }, {\n                token : \"storage.type\",\n                regex : /=>/\n            }, {\n                token : \"keyword.operator\",\n                regex : /--|\\+\\+|\\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\\|\\||\\?:|[!$%&*+\\-~\\/^]=?/,\n                next  : \"start\"\n            }, {\n                token : \"punctuation.operator\",\n                regex : /[?:,;.]/,\n                next  : \"start\"\n            }, {\n                token : \"paren.lparen\",\n                regex : /[\\[({]/,\n                next  : \"start\"\n            }, {\n                token : \"paren.rparen\",\n                regex : /[\\])}]/\n            }, {\n                token: \"comment\",\n                regex: /^#!.*$/\n            }\n        ],\n        property: [{\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }, {\n                token : [\n                    \"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\",\n                    \"keyword.operator\", \"text\",\n                    \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe +\")(\\\\s*)(=)(\\\\s*)(function)(?:(\\\\s+)(\\\\w+))?(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : \"punctuation.operator\",\n                regex : /[.](?![.])/\n            }, {\n                token : \"support.function\",\n                regex : /(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\\b(?=\\()/\n            }, {\n                token : \"support.function.dom\",\n                regex : /(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\\b(?=\\()/\n            }, {\n                token :  \"support.constant\",\n                regex : /(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\\b/\n            }, {\n                token : \"identifier\",\n                regex : identifierRe\n            }, {\n                regex: \"\",\n                token: \"empty\",\n                next: \"no_regex\"\n            }\n        ],\n        \"start\": [\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            comments(\"start\"),\n            {\n                token: \"string.regexp\",\n                regex: \"\\\\/\",\n                next: \"regex\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+|^$\",\n                next : \"start\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"regex\": [\n            {\n                token: \"regexp.keyword.operator\",\n                regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n            }, {\n                token: \"string.regexp\",\n                regex: \"/[sxngimy]*\",\n                next: \"no_regex\"\n            }, {\n                token : \"invalid\",\n                regex: /\\{\\d+\\b,?\\d*\\}[+*]|[+*$^?][+*]|[$^][?]|\\?{3,}/\n            }, {\n                token : \"constant.language.escape\",\n                regex: /\\(\\?[:=!]|\\)|\\{\\d+\\b,?\\d*\\}|[+*]\\?|[()$^+*?.]/\n            }, {\n                token : \"constant.language.delimiter\",\n                regex: /\\|/\n            }, {\n                token: \"constant.language.escape\",\n                regex: /\\[\\^?/,\n                next: \"regex_character_class\"\n            }, {\n                token: \"empty\",\n                regex: \"$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string.regexp\"\n            }\n        ],\n        \"regex_character_class\": [\n            {\n                token: \"regexp.charclass.keyword.operator\",\n                regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: \"]\",\n                next: \"regex\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: \"-\"\n            }, {\n                token: \"empty\",\n                regex: \"$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string.regexp.charachterclass\"\n            }\n        ],\n        \"function_arguments\": [\n            {\n                token: \"variable.parameter\",\n                regex: identifierRe\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"[, ]+\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"$\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"qqstring\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : escapedRe\n            }, {\n                token : \"string\",\n                regex : \"\\\\\\\\$\",\n                consumeLineEnd  : true\n            }, {\n                token : \"string\",\n                regex : '\"|$',\n                next  : \"no_regex\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ],\n        \"qstring\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : escapedRe\n            }, {\n                token : \"string\",\n                regex : \"\\\\\\\\$\",\n                consumeLineEnd  : true\n            }, {\n                token : \"string\",\n                regex : \"'|$\",\n                next  : \"no_regex\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ]\n    };\n\n\n    if (!options || !options.noES6) {\n        this.$rules.no_regex.unshift({\n            regex: \"[{}]\", onMatch: function(val, state, stack) {\n                this.next = val == \"{\" ? this.nextState : \"\";\n                if (val == \"{\" && stack.length) {\n                    stack.unshift(\"start\", state);\n                }\n                else if (val == \"}\" && stack.length) {\n                    stack.shift();\n                    this.next = stack.shift();\n                    if (this.next.indexOf(\"string\") != -1 || this.next.indexOf(\"jsx\") != -1)\n                        return \"paren.quasi.end\";\n                }\n                return val == \"{\" ? \"paren.lparen\" : \"paren.rparen\";\n            },\n            nextState: \"start\"\n        }, {\n            token : \"string.quasi.start\",\n            regex : /`/,\n            push  : [{\n                token : \"constant.language.escape\",\n                regex : escapedRe\n            }, {\n                token : \"paren.quasi.start\",\n                regex : /\\${/,\n                push  : \"start\"\n            }, {\n                token : \"string.quasi.end\",\n                regex : /`/,\n                next  : \"pop\"\n            }, {\n                defaultToken: \"string.quasi\"\n            }]\n        });\n\n        if (!options || options.jsx != false)\n            JSX.call(this);\n    }\n\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\n        [ DocCommentHighlightRules.getEndRule(\"no_regex\") ]);\n\n    this.normalizeRules();\n};\n\noop.inherits(JavaScriptHighlightRules, TextHighlightRules);\n\nfunction JSX() {\n    var tagRegex = identifierRe.replace(\"\\\\d\", \"\\\\d\\\\-\");\n    var jsxTag = {\n        onMatch : function(val, state, stack) {\n            var offset = val.charAt(1) == \"/\" ? 2 : 1;\n            if (offset == 1) {\n                if (state != this.nextState)\n                    stack.unshift(this.next, this.nextState, 0);\n                else\n                    stack.unshift(this.next);\n                stack[2]++;\n            } else if (offset == 2) {\n                if (state == this.nextState) {\n                    stack[1]--;\n                    if (!stack[1] || stack[1] < 0) {\n                        stack.shift();\n                        stack.shift();\n                    }\n                }\n            }\n            return [{\n                type: \"meta.tag.punctuation.\" + (offset == 1 ? \"\" : \"end-\") + \"tag-open.xml\",\n                value: val.slice(0, offset)\n            }, {\n                type: \"meta.tag.tag-name.xml\",\n                value: val.substr(offset)\n            }];\n        },\n        regex : \"</?\" + tagRegex + \"\",\n        next: \"jsxAttributes\",\n        nextState: \"jsx\"\n    };\n    this.$rules.start.unshift(jsxTag);\n    var jsxJsRule = {\n        regex: \"{\",\n        token: \"paren.quasi.start\",\n        push: \"start\"\n    };\n    this.$rules.jsx = [\n        jsxJsRule,\n        jsxTag,\n        {include : \"reference\"},\n        {defaultToken: \"string\"}\n    ];\n    this.$rules.jsxAttributes = [{\n        token : \"meta.tag.punctuation.tag-close.xml\",\n        regex : \"/?>\",\n        onMatch : function(value, currentState, stack) {\n            if (currentState == stack[0])\n                stack.shift();\n            if (value.length == 2) {\n                if (stack[0] == this.nextState)\n                    stack[1]--;\n                if (!stack[1] || stack[1] < 0) {\n                    stack.splice(0, 2);\n                }\n            }\n            this.next = stack[0] || \"start\";\n            return [{type: this.token, value: value}];\n        },\n        nextState: \"jsx\"\n    },\n    jsxJsRule,\n    comments(\"jsxAttributes\"),\n    {\n        token : \"entity.other.attribute-name.xml\",\n        regex : tagRegex\n    }, {\n        token : \"keyword.operator.attribute-equals.xml\",\n        regex : \"=\"\n    }, {\n        token : \"text.tag-whitespace.xml\",\n        regex : \"\\\\s+\"\n    }, {\n        token : \"string.attribute-value.xml\",\n        regex : \"'\",\n        stateName : \"jsx_attr_q\",\n        push : [\n            {token : \"string.attribute-value.xml\", regex: \"'\", next: \"pop\"},\n            {include : \"reference\"},\n            {defaultToken : \"string.attribute-value.xml\"}\n        ]\n    }, {\n        token : \"string.attribute-value.xml\",\n        regex : '\"',\n        stateName : \"jsx_attr_qq\",\n        push : [\n            {token : \"string.attribute-value.xml\", regex: '\"', next: \"pop\"},\n            {include : \"reference\"},\n            {defaultToken : \"string.attribute-value.xml\"}\n        ]\n    },\n    jsxTag\n    ];\n    this.$rules.reference = [{\n        token : \"constant.language.escape.reference.xml\",\n        regex : \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n    }];\n}\n\nfunction comments(next) {\n    return [\n        {\n            token : \"comment\", // multi line comment\n            regex : /\\/\\*/,\n            next: [\n                DocCommentHighlightRules.getTagRule(),\n                {token : \"comment\", regex : \"\\\\*\\\\/\", next : next || \"pop\"},\n                {defaultToken : \"comment\", caseInsensitive: true}\n            ]\n        }, {\n            token : \"comment\",\n            regex : \"\\\\/\\\\/\",\n            next: [\n                DocCommentHighlightRules.getTagRule(),\n                {token : \"comment\", regex : \"$|^\", next : next || \"pop\"},\n                {defaultToken : \"comment\", caseInsensitive: true}\n            ]\n        }\n    ];\n}\nexports.JavaScriptHighlightRules = JavaScriptHighlightRules;\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/javascript\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/javascript_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/worker/worker_client\",\"ace/mode/behaviour/cstyle\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar JavaScriptHighlightRules = acequire(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar WorkerClient = acequire(\"../worker/worker_client\").WorkerClient;\nvar CstyleBehaviour = acequire(\"./behaviour/cstyle\").CstyleBehaviour;\nvar CStyleFoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = JavaScriptHighlightRules;\n    \n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CstyleBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n    this.$quotes = {'\"': '\"', \"'\": \"'\", \"`\": \"`\"};\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n\n        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n        var tokens = tokenizedLine.tokens;\n        var endState = tokenizedLine.state;\n\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        if (state == \"start\" || state == \"no_regex\") {\n            var match = line.match(/^.*(?:\\bcase\\b.*:|[\\{\\(\\[])\\s*$/);\n            if (match) {\n                indent += tab;\n            }\n        } else if (state == \"doc-start\") {\n            if (endState == \"start\" || endState == \"no_regex\") {\n                return \"\";\n            }\n            var match = line.match(/^\\s*(\\/?)\\*/);\n            if (match) {\n                if (match[1]) {\n                    indent += \" \";\n                }\n                indent += \"* \";\n            }\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.createWorker = function(session) {\n        var worker = new WorkerClient([\"ace\"], require(\"../worker/javascript\"), \"JavaScriptWorker\");\n        worker.attachToDocument(session.getDocument());\n\n        worker.on(\"annotate\", function(results) {\n            session.setAnnotations(results.data);\n        });\n\n        worker.on(\"terminate\", function() {\n            session.clearAnnotations();\n        });\n\n        return worker;\n    };\n\n    this.$id = \"ace/mode/javascript\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n\nace.define(\"ace/mode/svg_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/javascript_highlight_rules\",\"ace/mode/xml_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar JavaScriptHighlightRules = acequire(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\nvar XmlHighlightRules = acequire(\"./xml_highlight_rules\").XmlHighlightRules;\n\nvar SvgHighlightRules = function() {\n    XmlHighlightRules.call(this);\n\n    this.embedTagRules(JavaScriptHighlightRules, \"js-\", \"script\");\n\n    this.normalizeRules();\n};\n\noop.inherits(SvgHighlightRules, XmlHighlightRules);\n\nexports.SvgHighlightRules = SvgHighlightRules;\n});\n\nace.define(\"ace/mode/folding/mixed\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(defaultMode, subModes) {\n    this.defaultMode = defaultMode;\n    this.subModes = subModes;\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n\n    this.$getMode = function(state) {\n        if (typeof state != \"string\") \n            state = state[0];\n        for (var key in this.subModes) {\n            if (state.indexOf(key) === 0)\n                return this.subModes[key];\n        }\n        return null;\n    };\n    \n    this.$tryMode = function(state, session, foldStyle, row) {\n        var mode = this.$getMode(state);\n        return (mode ? mode.getFoldWidget(session, foldStyle, row) : \"\");\n    };\n\n    this.getFoldWidget = function(session, foldStyle, row) {\n        return (\n            this.$tryMode(session.getState(row-1), session, foldStyle, row) ||\n            this.$tryMode(session.getState(row), session, foldStyle, row) ||\n            this.defaultMode.getFoldWidget(session, foldStyle, row)\n        );\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var mode = this.$getMode(session.getState(row-1));\n        \n        if (!mode || !mode.getFoldWidget(session, foldStyle, row))\n            mode = this.$getMode(session.getState(row));\n        \n        if (!mode || !mode.getFoldWidget(session, foldStyle, row))\n            mode = this.defaultMode;\n        \n        return mode.getFoldWidgetRange(session, foldStyle, row);\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/svg\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/xml\",\"ace/mode/javascript\",\"ace/mode/svg_highlight_rules\",\"ace/mode/folding/mixed\",\"ace/mode/folding/xml\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar XmlMode = acequire(\"./xml\").Mode;\nvar JavaScriptMode = acequire(\"./javascript\").Mode;\nvar SvgHighlightRules = acequire(\"./svg_highlight_rules\").SvgHighlightRules;\nvar MixedFoldMode = acequire(\"./folding/mixed\").FoldMode;\nvar XmlFoldMode = acequire(\"./folding/xml\").FoldMode;\nvar CStyleFoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    XmlMode.call(this);\n    \n    this.HighlightRules = SvgHighlightRules;\n    \n    this.createModeDelegates({\n        \"js-\": JavaScriptMode\n    });\n    \n    this.foldingRules = new MixedFoldMode(new XmlFoldMode(), {\n        \"js-\": new CStyleFoldMode()\n    });\n};\n\noop.inherits(Mode, XmlMode);\n\n(function() {\n\n    this.getNextLineIndent = function(state, line, tab) {\n        return this.$getIndent(line);\n    };\n    \n\n    this.$id = \"ace/mode/svg\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"],"sourceRoot":""}
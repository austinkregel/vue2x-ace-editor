{"version":3,"sources":["webpack:///./node_modules/brace/mode/swig.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","supportType","supportFunction","supportConstant","supportConstantColor","supportConstantFonts","numRe","pseudoElements","pseudoClasses","CssHighlightRules","keywordMapper","this","createKeywordMapper","support.function","support.constant","support.type","support.constant.color","support.constant.fonts","$rules","start","token","regex","push","caseInsensitive","media","next","comment","defaultToken","ruleset","normalizeRules","inherits","DocCommentHighlightRules","getTagRule","getStartRule","getEndRule","identifierRe","JavaScriptHighlightRules","options","variable.language","keyword","storage.type","constant.language","constant.language.boolean","kwBeforeRe","escapedRe","no_regex","property","regex_character_class","function_arguments","comment_regex_allowed","line_comment_regex_allowed","line_comment","qqstring","qstring","noES6","unshift","onMatch","val","state","stack","nextState","length","shift","indexOf","noJSX","JSX","call","embedRules","tagRegex","replace","jsxTag","offset","charAt","type","value","slice","substr","jsxJsRule","jsx","include","jsxAttributes","currentState","splice","stateName","reference","XmlHighlightRules","normalize","xml_decl","processing_instruction","doctype","int_subset","cdata","attr_reference","tag","tag_whitespace","whitespace","string","attributes","attribute_value","constructor","embedTagRules","HighlightRules","prefix","prototype","lang","tagMap","createMap","a","button","form","img","input","label","option","script","select","textarea","style","table","tbody","td","tfoot","th","tr","HtmlHighlightRules","addRules","group","tag_stuff","getRules","SwigHighlightRules","tags","filters","special","constants","operators","keyword.control.swig","support.function.swig","keyword.operator.swig","constant.language.swig","rule"],"mappings":"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","file":"js/chunk-2d0ceba0.d87ec002.js","sourcesContent":["ace.define(\"ace/mode/css_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar lang = acequire(\"../lib/lang\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\nvar supportType = exports.supportType = \"animation-fill-mode|alignment-adjust|alignment-baseline|animation-delay|animation-direction|animation-duration|animation-iteration-count|animation-name|animation-play-state|animation-timing-function|animation|appearance|azimuth|backface-visibility|background-attachment|background-break|background-clip|background-color|background-image|background-origin|background-position|background-repeat|background-size|background|baseline-shift|binding|bleed|bookmark-label|bookmark-level|bookmark-state|bookmark-target|border-bottom|border-bottom-color|border-bottom-left-radius|border-bottom-right-radius|border-bottom-style|border-bottom-width|border-collapse|border-color|border-image|border-image-outset|border-image-repeat|border-image-slice|border-image-source|border-image-width|border-left|border-left-color|border-left-style|border-left-width|border-radius|border-right|border-right-color|border-right-style|border-right-width|border-spacing|border-style|border-top|border-top-color|border-top-left-radius|border-top-right-radius|border-top-style|border-top-width|border-width|border|bottom|box-align|box-decoration-break|box-direction|box-flex-group|box-flex|box-lines|box-ordinal-group|box-orient|box-pack|box-shadow|box-sizing|break-after|break-before|break-inside|caption-side|clear|clip|color-profile|color|column-count|column-fill|column-gap|column-rule|column-rule-color|column-rule-style|column-rule-width|column-span|column-width|columns|content|counter-increment|counter-reset|crop|cue-after|cue-before|cue|cursor|direction|display|dominant-baseline|drop-initial-after-adjust|drop-initial-after-align|drop-initial-before-adjust|drop-initial-before-align|drop-initial-size|drop-initial-value|elevation|empty-cells|fit|fit-position|float-offset|float|font-family|font-size|font-size-adjust|font-stretch|font-style|font-variant|font-weight|font|grid-columns|grid-rows|hanging-punctuation|height|hyphenate-after|hyphenate-before|hyphenate-character|hyphenate-lines|hyphenate-resource|hyphens|icon|image-orientation|image-rendering|image-resolution|inline-box-align|left|letter-spacing|line-height|line-stacking-ruby|line-stacking-shift|line-stacking-strategy|line-stacking|list-style-image|list-style-position|list-style-type|list-style|margin-bottom|margin-left|margin-right|margin-top|margin|mark-after|mark-before|mark|marks|marquee-direction|marquee-play-count|marquee-speed|marquee-style|max-height|max-width|min-height|min-width|move-to|nav-down|nav-index|nav-left|nav-right|nav-up|opacity|orphans|outline-color|outline-offset|outline-style|outline-width|outline|overflow-style|overflow-x|overflow-y|overflow|padding-bottom|padding-left|padding-right|padding-top|padding|page-break-after|page-break-before|page-break-inside|page-policy|page|pause-after|pause-before|pause|perspective-origin|perspective|phonemes|pitch-range|pitch|play-during|pointer-events|position|presentation-level|punctuation-trim|quotes|rendering-intent|resize|rest-after|rest-before|rest|richness|right|rotation-point|rotation|ruby-align|ruby-overhang|ruby-position|ruby-span|size|speak-header|speak-numeral|speak-punctuation|speak|speech-rate|stress|string-set|table-layout|target-name|target-new|target-position|target|text-align-last|text-align|text-decoration|text-emphasis|text-height|text-indent|text-justify|text-outline|text-shadow|text-transform|text-wrap|top|transform-origin|transform-style|transform|transition-delay|transition-duration|transition-property|transition-timing-function|transition|unicode-bidi|vertical-align|visibility|voice-balance|voice-duration|voice-family|voice-pitch-range|voice-pitch|voice-rate|voice-stress|voice-volume|volume|white-space-collapse|white-space|widows|width|word-break|word-spacing|word-wrap|z-index\";\nvar supportFunction = exports.supportFunction = \"rgb|rgba|url|attr|counter|counters\";\nvar supportConstant = exports.supportConstant = \"absolute|after-edge|after|all-scroll|all|alphabetic|always|antialiased|armenian|auto|avoid-column|avoid-page|avoid|balance|baseline|before-edge|before|below|bidi-override|block-line-height|block|bold|bolder|border-box|both|bottom|box|break-all|break-word|capitalize|caps-height|caption|center|central|char|circle|cjk-ideographic|clone|close-quote|col-resize|collapse|column|consider-shifts|contain|content-box|cover|crosshair|cubic-bezier|dashed|decimal-leading-zero|decimal|default|disabled|disc|disregard-shifts|distribute-all-lines|distribute-letter|distribute-space|distribute|dotted|double|e-resize|ease-in|ease-in-out|ease-out|ease|ellipsis|end|exclude-ruby|fill|fixed|georgian|glyphs|grid-height|groove|hand|hanging|hebrew|help|hidden|hiragana-iroha|hiragana|horizontal|icon|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space|ideographic|inactive|include-ruby|inherit|initial|inline-block|inline-box|inline-line-height|inline-table|inline|inset|inside|inter-ideograph|inter-word|invert|italic|justify|katakana-iroha|katakana|keep-all|last|left|lighter|line-edge|line-through|line|linear|list-item|local|loose|lower-alpha|lower-greek|lower-latin|lower-roman|lowercase|lr-tb|ltr|mathematical|max-height|max-size|medium|menu|message-box|middle|move|n-resize|ne-resize|newspaper|no-change|no-close-quote|no-drop|no-open-quote|no-repeat|none|normal|not-allowed|nowrap|nw-resize|oblique|open-quote|outset|outside|overline|padding-box|page|pointer|pre-line|pre-wrap|pre|preserve-3d|progress|relative|repeat-x|repeat-y|repeat|replaced|reset-size|ridge|right|round|row-resize|rtl|s-resize|scroll|se-resize|separate|slice|small-caps|small-caption|solid|space|square|start|static|status-bar|step-end|step-start|steps|stretch|strict|sub|super|sw-resize|table-caption|table-cell|table-column-group|table-column|table-footer-group|table-header-group|table-row-group|table-row|table|tb-rl|text-after-edge|text-before-edge|text-bottom|text-size|text-top|text|thick|thin|transparent|underline|upper-alpha|upper-latin|upper-roman|uppercase|use-script|vertical-ideographic|vertical-text|visible|w-resize|wait|whitespace|z-index|zero\";\nvar supportConstantColor = exports.supportConstantColor = \"aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow\";\nvar supportConstantFonts = exports.supportConstantFonts = \"arial|century|comic|courier|cursive|fantasy|garamond|georgia|helvetica|impact|lucida|symbol|system|tahoma|times|trebuchet|utopia|verdana|webdings|sans-serif|serif|monospace\";\n\nvar numRe = exports.numRe = \"\\\\-?(?:(?:[0-9]+)|(?:[0-9]*\\\\.[0-9]+))\";\nvar pseudoElements = exports.pseudoElements = \"(\\\\:+)\\\\b(after|before|first-letter|first-line|moz-selection|selection)\\\\b\";\nvar pseudoClasses  = exports.pseudoClasses =  \"(:)\\\\b(active|checked|disabled|empty|enabled|first-child|first-of-type|focus|hover|indeterminate|invalid|last-child|last-of-type|link|not|nth-child|nth-last-child|nth-last-of-type|nth-of-type|only-child|only-of-type|acequired|root|target|valid|visited)\\\\b\";\n\nvar CssHighlightRules = function() {\n\n    var keywordMapper = this.createKeywordMapper({\n        \"support.function\": supportFunction,\n        \"support.constant\": supportConstant,\n        \"support.type\": supportType,\n        \"support.constant.color\": supportConstantColor,\n        \"support.constant.fonts\": supportConstantFonts\n    }, \"text\", true);\n\n    this.$rules = {\n        \"start\" : [{\n            token : \"comment\", // multi line comment\n            regex : \"\\\\/\\\\*\",\n            push : \"comment\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"\\\\{\",\n            push:  \"ruleset\"\n        }, {\n            token: \"string\",\n            regex: \"@.*?{\",\n            push:  \"media\"\n        }, {\n            token: \"keyword\",\n            regex: \"#[a-z0-9-_]+\"\n        }, {\n            token: \"variable\",\n            regex: \"\\\\.[a-z0-9-_]+\"\n        }, {\n            token: \"string\",\n            regex: \":[a-z0-9-_]+\"\n        }, {\n            token: \"constant\",\n            regex: \"[a-z0-9-_]+\"\n        }, {\n            caseInsensitive: true\n        }],\n\n        \"media\" : [{\n            token : \"comment\", // multi line comment\n            regex : \"\\\\/\\\\*\",\n            push : \"comment\"\n        }, {\n            token: \"paren.lparen\",\n            regex: \"\\\\{\",\n            push:  \"ruleset\"\n        }, {\n            token: \"string\",\n            regex: \"\\\\}\",\n            next:  \"pop\"\n        }, {\n            token: \"keyword\",\n            regex: \"#[a-z0-9-_]+\"\n        }, {\n            token: \"variable\",\n            regex: \"\\\\.[a-z0-9-_]+\"\n        }, {\n            token: \"string\",\n            regex: \":[a-z0-9-_]+\"\n        }, {\n            token: \"constant\",\n            regex: \"[a-z0-9-_]+\"\n        }, {\n            caseInsensitive: true\n        }],\n\n        \"comment\" : [{\n            token : \"comment\",\n            regex : \"\\\\*\\\\/\",\n            next : \"pop\"\n        }, {\n            defaultToken : \"comment\"\n        }],\n\n        \"ruleset\" : [\n        {\n            token : \"paren.rparen\",\n            regex : \"\\\\}\",\n            next:   \"pop\"\n        }, {\n            token : \"comment\", // multi line comment\n            regex : \"\\\\/\\\\*\",\n            push : \"comment\"\n        }, {\n            token : \"string\", // single line\n            regex : '[\"](?:(?:\\\\\\\\.)|(?:[^\"\\\\\\\\]))*?[\"]'\n        }, {\n            token : \"string\", // single line\n            regex : \"['](?:(?:\\\\\\\\.)|(?:[^'\\\\\\\\]))*?[']\"\n        }, {\n            token : [\"constant.numeric\", \"keyword\"],\n            regex : \"(\" + numRe + \")(ch|cm|deg|em|ex|fr|gd|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vm|vw|%)\"\n        }, {\n            token : \"constant.numeric\",\n            regex : numRe\n        }, {\n            token : \"constant.numeric\",  // hex6 color\n            regex : \"#[a-f0-9]{6}\"\n        }, {\n            token : \"constant.numeric\", // hex3 color\n            regex : \"#[a-f0-9]{3}\"\n        }, {\n            token : [\"punctuation\", \"entity.other.attribute-name.pseudo-element.css\"],\n            regex : pseudoElements\n        }, {\n            token : [\"punctuation\", \"entity.other.attribute-name.pseudo-class.css\"],\n            regex : pseudoClasses\n        }, {\n            token : [\"support.function\", \"string\", \"support.function\"],\n            regex : \"(url\\\\()(.*)(\\\\))\"\n        }, {\n            token : keywordMapper,\n            regex : \"\\\\-?[a-zA-Z_][a-zA-Z0-9_\\\\-]*\"\n        }, {\n            caseInsensitive: true\n        }]\n    };\n\n    this.normalizeRules();\n};\n\noop.inherits(CssHighlightRules, TextHighlightRules);\n\nexports.CssHighlightRules = CssHighlightRules;\n\n});\n\nace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DocCommentHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment.doc.tag\",\n            regex : \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n        }, \n        DocCommentHighlightRules.getTagRule(),\n        {\n            defaultToken : \"comment.doc\",\n            caseInsensitive: true\n        }]\n    };\n};\n\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\nDocCommentHighlightRules.getTagRule = function(start) {\n    return {\n        token : \"comment.doc.tag.storage.type\",\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n}\n\nDocCommentHighlightRules.getStartRule = function(start) {\n    return {\n        token : \"comment.doc\", // doc comment\n        regex : \"\\\\/\\\\*(?=\\\\*)\",\n        next  : start\n    };\n};\n\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token : \"comment.doc\", // closing comment\n        regex : \"\\\\*\\\\/\",\n        next  : start\n    };\n};\n\n\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/javascript_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\nvar identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\\\\b\";\n\nvar JavaScriptHighlightRules = function(options) {\n    var keywordMapper = this.createKeywordMapper({\n        \"variable.language\":\n            \"Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|\"  + // Constructors\n            \"Namespace|QName|XML|XMLList|\"                                             + // E4X\n            \"ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|\"   +\n            \"Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|\"                    +\n            \"Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|\"   + // Errors\n            \"SyntaxError|TypeError|URIError|\"                                          +\n            \"decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|\" + // Non-constructor functions\n            \"isNaN|parseFloat|parseInt|\"                                               +\n            \"JSON|Math|\"                                                               + // Other\n            \"this|arguments|prototype|window|document\"                                 , // Pseudo\n        \"keyword\":\n            \"const|yield|import|get|set|\" +\n            \"break|case|catch|continue|default|delete|do|else|finally|for|function|\" +\n            \"if|in|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|\" +\n            \"__parent__|__count__|escape|unescape|with|__proto__|\" +\n            \"class|enum|extends|super|export|implements|private|public|interface|package|protected|static\",\n        \"storage.type\":\n            \"const|let|var|function\",\n        \"constant.language\":\n            \"null|Infinity|NaN|undefined\",\n        \"support.function\":\n            \"alert\",\n        \"constant.language.boolean\": \"true|false\"\n    }, \"identifier\");\n    var kwBeforeRe = \"case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void\";\n\n    var escapedRe = \"\\\\\\\\(?:x[0-9a-fA-F]{2}|\" + // hex\n        \"u[0-9a-fA-F]{4}|\" + // unicode\n        \"[0-2][0-7]{0,2}|\" + // oct\n        \"3[0-6][0-7]?|\" + // oct\n        \"37[0-7]?|\" + // oct\n        \"[4-7][0-7]?|\" + //oct\n        \".)\";\n\n    this.$rules = {\n        \"no_regex\" : [\n            {\n                token : \"comment\",\n                regex : \"\\\\/\\\\/\",\n                next : \"line_comment\"\n            },\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token : \"comment\", // multi line comment\n                regex : /\\/\\*/,\n                next : \"comment\"\n            }, {\n                token : \"string\",\n                regex : \"'(?=.)\",\n                next  : \"qstring\"\n            }, {\n                token : \"string\",\n                regex : '\"(?=.)',\n                next  : \"qqstring\"\n            }, {\n                token : \"constant.numeric\", // hex\n                regex : /0[xX][0-9a-fA-F]+\\b/\n            }, {\n                token : \"constant.numeric\", // float\n                regex : /[+-]?\\d+(?:(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)?\\b/\n            }, {\n                token : [\n                    \"storage.type\", \"punctuation.operator\", \"support.function\",\n                    \"punctuation.operator\", \"entity.name.function\", \"text\",\"keyword.operator\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\.)(prototype)(\\\\.)(\" + identifierRe +\")(\\\\s*)(=)\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\",\n                    \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe +\")(\\\\s*)(=)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\",\n                    \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe +\")(\\\\s*)(=)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\",\n                    \"keyword.operator\", \"text\",\n                    \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe +\")(\\\\s*)(=)(\\\\s*)(function)(\\\\s+)(\\\\w+)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(function)(\\\\s+)(\" + identifierRe + \")(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"entity.name.function\", \"text\", \"punctuation.operator\",\n                    \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\s*)(:)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"text\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(:)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : \"keyword\",\n                regex : \"(?:\" + kwBeforeRe + \")\\\\b\",\n                next : \"start\"\n            }, {\n                token : [\"support.constant\"],\n                regex : /that\\b/\n            }, {\n                token : [\"storage.type\", \"punctuation.operator\", \"support.function.firebug\"],\n                regex : /(console)(\\.)(warn|info|log|error|time|trace|timeEnd|assert)\\b/\n            }, {\n                token : keywordMapper,\n                regex : identifierRe\n            }, {\n                token : \"punctuation.operator\",\n                regex : /[.](?![.])/,\n                next  : \"property\"\n            }, {\n                token : \"keyword.operator\",\n                regex : /--|\\+\\+|\\.{3}|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\|\\||\\?\\:|[!$%&*+\\-~\\/^]=?/,\n                next  : \"start\"\n            }, {\n                token : \"punctuation.operator\",\n                regex : /[?:,;.]/,\n                next  : \"start\"\n            }, {\n                token : \"paren.lparen\",\n                regex : /[\\[({]/,\n                next  : \"start\"\n            }, {\n                token : \"paren.rparen\",\n                regex : /[\\])}]/\n            }, {\n                token: \"comment\",\n                regex: /^#!.*$/\n            }\n        ],\n        property: [{\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }, {\n                token : [\n                    \"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\",\n                    \"keyword.operator\", \"text\",\n                    \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe +\")(\\\\s*)(=)(\\\\s*)(function)(?:(\\\\s+)(\\\\w+))?(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : \"punctuation.operator\",\n                regex : /[.](?![.])/\n            }, {\n                token : \"support.function\",\n                regex : /(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\\b(?=\\()/\n            }, {\n                token : \"support.function.dom\",\n                regex : /(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\\b(?=\\()/\n            }, {\n                token :  \"support.constant\",\n                regex : /(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\\b/\n            }, {\n                token : \"identifier\",\n                regex : identifierRe\n            }, {\n                regex: \"\",\n                token: \"empty\",\n                next: \"no_regex\"\n            }\n        ],\n        \"start\": [\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            {\n                token : \"comment\", // multi line comment\n                regex : \"\\\\/\\\\*\",\n                next : \"comment_regex_allowed\"\n            }, {\n                token : \"comment\",\n                regex : \"\\\\/\\\\/\",\n                next : \"line_comment_regex_allowed\"\n            }, {\n                token: \"string.regexp\",\n                regex: \"\\\\/\",\n                next: \"regex\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+|^$\",\n                next : \"start\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"regex\": [\n            {\n                token: \"regexp.keyword.operator\",\n                regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n            }, {\n                token: \"string.regexp\",\n                regex: \"/[sxngimy]*\",\n                next: \"no_regex\"\n            }, {\n                token : \"invalid\",\n                regex: /\\{\\d+\\b,?\\d*\\}[+*]|[+*$^?][+*]|[$^][?]|\\?{3,}/\n            }, {\n                token : \"constant.language.escape\",\n                regex: /\\(\\?[:=!]|\\)|\\{\\d+\\b,?\\d*\\}|[+*]\\?|[()$^+*?.]/\n            }, {\n                token : \"constant.language.delimiter\",\n                regex: /\\|/\n            }, {\n                token: \"constant.language.escape\",\n                regex: /\\[\\^?/,\n                next: \"regex_character_class\"\n            }, {\n                token: \"empty\",\n                regex: \"$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string.regexp\"\n            }\n        ],\n        \"regex_character_class\": [\n            {\n                token: \"regexp.charclass.keyword.operator\",\n                regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: \"]\",\n                next: \"regex\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: \"-\"\n            }, {\n                token: \"empty\",\n                regex: \"$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string.regexp.charachterclass\"\n            }\n        ],\n        \"function_arguments\": [\n            {\n                token: \"variable.parameter\",\n                regex: identifierRe\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"[, ]+\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"$\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"comment_regex_allowed\" : [\n            DocCommentHighlightRules.getTagRule(),\n            {token : \"comment\", regex : \"\\\\*\\\\/\", next : \"start\"},\n            {defaultToken : \"comment\", caseInsensitive: true}\n        ],\n        \"comment\" : [\n            DocCommentHighlightRules.getTagRule(),\n            {token : \"comment\", regex : \"\\\\*\\\\/\", next : \"no_regex\"},\n            {defaultToken : \"comment\", caseInsensitive: true}\n        ],\n        \"line_comment_regex_allowed\" : [\n            DocCommentHighlightRules.getTagRule(),\n            {token : \"comment\", regex : \"$|^\", next : \"start\"},\n            {defaultToken : \"comment\", caseInsensitive: true}\n        ],\n        \"line_comment\" : [\n            DocCommentHighlightRules.getTagRule(),\n            {token : \"comment\", regex : \"$|^\", next : \"no_regex\"},\n            {defaultToken : \"comment\", caseInsensitive: true}\n        ],\n        \"qqstring\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : escapedRe\n            }, {\n                token : \"string\",\n                regex : \"\\\\\\\\$\",\n                next  : \"qqstring\"\n            }, {\n                token : \"string\",\n                regex : '\"|$',\n                next  : \"no_regex\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ],\n        \"qstring\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : escapedRe\n            }, {\n                token : \"string\",\n                regex : \"\\\\\\\\$\",\n                next  : \"qstring\"\n            }, {\n                token : \"string\",\n                regex : \"'|$\",\n                next  : \"no_regex\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ]\n    };\n    \n    \n    if (!options || !options.noES6) {\n        this.$rules.no_regex.unshift({\n            regex: \"[{}]\", onMatch: function(val, state, stack) {\n                this.next = val == \"{\" ? this.nextState : \"\";\n                if (val == \"{\" && stack.length) {\n                    stack.unshift(\"start\", state);\n                    return \"paren\";\n                }\n                if (val == \"}\" && stack.length) {\n                    stack.shift();\n                    this.next = stack.shift();\n                    if (this.next.indexOf(\"string\") != -1 || this.next.indexOf(\"jsx\") != -1)\n                        return \"paren.quasi.end\";\n                }\n                return val == \"{\" ? \"paren.lparen\" : \"paren.rparen\";\n            },\n            nextState: \"start\"\n        }, {\n            token : \"string.quasi.start\",\n            regex : /`/,\n            push  : [{\n                token : \"constant.language.escape\",\n                regex : escapedRe\n            }, {\n                token : \"paren.quasi.start\",\n                regex : /\\${/,\n                push  : \"start\"\n            }, {\n                token : \"string.quasi.end\",\n                regex : /`/,\n                next  : \"pop\"\n            }, {\n                defaultToken: \"string.quasi\"\n            }]\n        });\n        \n        if (!options || !options.noJSX)\n            JSX.call(this);\n    }\n    \n    this.embedRules(DocCommentHighlightRules, \"doc-\",\n        [ DocCommentHighlightRules.getEndRule(\"no_regex\") ]);\n    \n    this.normalizeRules();\n};\n\noop.inherits(JavaScriptHighlightRules, TextHighlightRules);\n\nfunction JSX() {\n    var tagRegex = identifierRe.replace(\"\\\\d\", \"\\\\d\\\\-\");\n    var jsxTag = {\n        onMatch : function(val, state, stack) {\n            var offset = val.charAt(1) == \"/\" ? 2 : 1;\n            if (offset == 1) {\n                if (state != this.nextState)\n                    stack.unshift(this.next, this.nextState, 0);\n                else\n                    stack.unshift(this.next);\n                stack[2]++;\n            } else if (offset == 2) {\n                if (state == this.nextState) {\n                    stack[1]--;\n                    if (!stack[1] || stack[1] < 0) {\n                        stack.shift();\n                        stack.shift();\n                    }\n                }\n            }\n            return [{\n                type: \"meta.tag.punctuation.\" + (offset == 1 ? \"\" : \"end-\") + \"tag-open.xml\",\n                value: val.slice(0, offset)\n            }, {\n                type: \"meta.tag.tag-name.xml\",\n                value: val.substr(offset)\n            }];\n        },\n        regex : \"</?\" + tagRegex + \"\",\n        next: \"jsxAttributes\",\n        nextState: \"jsx\"\n    };\n    this.$rules.start.unshift(jsxTag);\n    var jsxJsRule = {\n        regex: \"{\",\n        token: \"paren.quasi.start\",\n        push: \"start\"\n    };\n    this.$rules.jsx = [\n        jsxJsRule,\n        jsxTag,\n        {include : \"reference\"},\n        {defaultToken: \"string\"}\n    ];\n    this.$rules.jsxAttributes = [{\n        token : \"meta.tag.punctuation.tag-close.xml\", \n        regex : \"/?>\", \n        onMatch : function(value, currentState, stack) {\n            if (currentState == stack[0])\n                stack.shift();\n            if (value.length == 2) {\n                if (stack[0] == this.nextState)\n                    stack[1]--;\n                if (!stack[1] || stack[1] < 0) {\n                    stack.splice(0, 2);\n                }\n            }\n            this.next = stack[0] || \"start\";\n            return [{type: this.token, value: value}];\n        },\n        nextState: \"jsx\"\n    }, \n    jsxJsRule,\n    {\n        token : \"entity.other.attribute-name.xml\",\n        regex : tagRegex\n    }, {\n        token : \"keyword.operator.attribute-equals.xml\",\n        regex : \"=\"\n    }, {\n        token : \"text.tag-whitespace.xml\",\n        regex : \"\\\\s+\"\n    }, {\n        token : \"string.attribute-value.xml\",\n        regex : \"'\",\n        stateName : \"jsx_attr_q\",\n        push : [\n            {token : \"string.attribute-value.xml\", regex: \"'\", next: \"pop\"},\n            jsxJsRule,\n            {include : \"reference\"},\n            {defaultToken : \"string.attribute-value.xml\"}\n        ]\n    }, {\n        token : \"string.attribute-value.xml\",\n        regex : '\"',\n        stateName : \"jsx_attr_qq\",\n        push : [\n            jsxJsRule,\n            {token : \"string.attribute-value.xml\", regex: '\"', next: \"pop\"},\n            {include : \"reference\"},\n            {defaultToken : \"string.attribute-value.xml\"}\n        ]\n    }];\n    this.$rules.reference = [{\n        token : \"constant.language.escape.reference.xml\",\n        regex : \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n    }];\n}\n\nexports.JavaScriptHighlightRules = JavaScriptHighlightRules;\n});\n\nace.define(\"ace/mode/xml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar XmlHighlightRules = function(normalize) {\n    var tagRegex = \"[_:a-zA-Z\\xc0-\\uffff][-_:.a-zA-Z0-9\\xc0-\\uffff]*\";\n\n    this.$rules = {\n        start : [\n            {token : \"string.cdata.xml\", regex : \"<\\\\!\\\\[CDATA\\\\[\", next : \"cdata\"},\n            {\n                token : [\"punctuation.xml-decl.xml\", \"keyword.xml-decl.xml\"],\n                regex : \"(<\\\\?)(xml)(?=[\\\\s])\", next : \"xml_decl\", caseInsensitive: true\n            },\n            {\n                token : [\"punctuation.instruction.xml\", \"keyword.instruction.xml\"],\n                regex : \"(<\\\\?)(\" + tagRegex + \")\", next : \"processing_instruction\",\n            },\n            {token : \"comment.xml\", regex : \"<\\\\!--\", next : \"comment\"},\n            {\n                token : [\"xml-pe.doctype.xml\", \"xml-pe.doctype.xml\"],\n                regex : \"(<\\\\!)(DOCTYPE)(?=[\\\\s])\", next : \"doctype\", caseInsensitive: true\n            },\n            {include : \"tag\"},\n            {token : \"text.end-tag-open.xml\", regex: \"</\"},\n            {token : \"text.tag-open.xml\", regex: \"<\"},\n            {include : \"reference\"},\n            {defaultToken : \"text.xml\"}\n        ],\n\n        xml_decl : [{\n            token : \"entity.other.attribute-name.decl-attribute-name.xml\",\n            regex : \"(?:\" + tagRegex + \":)?\" + tagRegex + \"\"\n        }, {\n            token : \"keyword.operator.decl-attribute-equals.xml\",\n            regex : \"=\"\n        }, {\n            include: \"whitespace\"\n        }, {\n            include: \"string\"\n        }, {\n            token : \"punctuation.xml-decl.xml\",\n            regex : \"\\\\?>\",\n            next : \"start\"\n        }],\n\n        processing_instruction : [\n            {token : \"punctuation.instruction.xml\", regex : \"\\\\?>\", next : \"start\"},\n            {defaultToken : \"instruction.xml\"}\n        ],\n\n        doctype : [\n            {include : \"whitespace\"},\n            {include : \"string\"},\n            {token : \"xml-pe.doctype.xml\", regex : \">\", next : \"start\"},\n            {token : \"xml-pe.xml\", regex : \"[-_a-zA-Z0-9:]+\"},\n            {token : \"punctuation.int-subset\", regex : \"\\\\[\", push : \"int_subset\"}\n        ],\n\n        int_subset : [{\n            token : \"text.xml\",\n            regex : \"\\\\s+\"\n        }, {\n            token: \"punctuation.int-subset.xml\",\n            regex: \"]\",\n            next: \"pop\"\n        }, {\n            token : [\"punctuation.markup-decl.xml\", \"keyword.markup-decl.xml\"],\n            regex : \"(<\\\\!)(\" + tagRegex + \")\",\n            push : [{\n                token : \"text\",\n                regex : \"\\\\s+\"\n            },\n            {\n                token : \"punctuation.markup-decl.xml\",\n                regex : \">\",\n                next : \"pop\"\n            },\n            {include : \"string\"}]\n        }],\n\n        cdata : [\n            {token : \"string.cdata.xml\", regex : \"\\\\]\\\\]>\", next : \"start\"},\n            {token : \"text.xml\", regex : \"\\\\s+\"},\n            {token : \"text.xml\", regex : \"(?:[^\\\\]]|\\\\](?!\\\\]>))+\"}\n        ],\n\n        comment : [\n            {token : \"comment.xml\", regex : \"-->\", next : \"start\"},\n            {defaultToken : \"comment.xml\"}\n        ],\n\n        reference : [{\n            token : \"constant.language.escape.reference.xml\",\n            regex : \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n        }],\n\n        attr_reference : [{\n            token : \"constant.language.escape.reference.attribute-value.xml\",\n            regex : \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n        }],\n\n        tag : [{\n            token : [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.tag-name.xml\"],\n            regex : \"(?:(<)|(</))((?:\" + tagRegex + \":)?\" + tagRegex + \")\",\n            next: [\n                {include : \"attributes\"},\n                {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\", next : \"start\"}\n            ]\n        }],\n\n        tag_whitespace : [\n            {token : \"text.tag-whitespace.xml\", regex : \"\\\\s+\"}\n        ],\n        whitespace : [\n            {token : \"text.whitespace.xml\", regex : \"\\\\s+\"}\n        ],\n        string: [{\n            token : \"string.xml\",\n            regex : \"'\",\n            push : [\n                {token : \"string.xml\", regex: \"'\", next: \"pop\"},\n                {defaultToken : \"string.xml\"}\n            ]\n        }, {\n            token : \"string.xml\",\n            regex : '\"',\n            push : [\n                {token : \"string.xml\", regex: '\"', next: \"pop\"},\n                {defaultToken : \"string.xml\"}\n            ]\n        }],\n\n        attributes: [{\n            token : \"entity.other.attribute-name.xml\",\n            regex : \"(?:\" + tagRegex + \":)?\" + tagRegex + \"\"\n        }, {\n            token : \"keyword.operator.attribute-equals.xml\",\n            regex : \"=\"\n        }, {\n            include: \"tag_whitespace\"\n        }, {\n            include: \"attribute_value\"\n        }],\n\n        attribute_value: [{\n            token : \"string.attribute-value.xml\",\n            regex : \"'\",\n            push : [\n                {token : \"string.attribute-value.xml\", regex: \"'\", next: \"pop\"},\n                {include : \"attr_reference\"},\n                {defaultToken : \"string.attribute-value.xml\"}\n            ]\n        }, {\n            token : \"string.attribute-value.xml\",\n            regex : '\"',\n            push : [\n                {token : \"string.attribute-value.xml\", regex: '\"', next: \"pop\"},\n                {include : \"attr_reference\"},\n                {defaultToken : \"string.attribute-value.xml\"}\n            ]\n        }]\n    };\n\n    if (this.constructor === XmlHighlightRules)\n        this.normalizeRules();\n};\n\n\n(function() {\n\n    this.embedTagRules = function(HighlightRules, prefix, tag){\n        this.$rules.tag.unshift({\n            token : [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n            regex : \"(<)(\" + tag + \"(?=\\\\s|>|$))\",\n            next: [\n                {include : \"attributes\"},\n                {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\", next : prefix + \"start\"}\n            ]\n        });\n\n        this.$rules[tag + \"-end\"] = [\n            {include : \"attributes\"},\n            {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\",  next: \"start\",\n                onMatch : function(value, currentState, stack) {\n                    stack.splice(0);\n                    return this.token;\n            }}\n        ]\n\n        this.embedRules(HighlightRules, prefix, [{\n            token: [\"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n            regex : \"(</)(\" + tag + \"(?=\\\\s|>|$))\",\n            next: tag + \"-end\"\n        }, {\n            token: \"string.cdata.xml\",\n            regex : \"<\\\\!\\\\[CDATA\\\\[\"\n        }, {\n            token: \"string.cdata.xml\",\n            regex : \"\\\\]\\\\]>\"\n        }]);\n    };\n\n}).call(TextHighlightRules.prototype);\n\noop.inherits(XmlHighlightRules, TextHighlightRules);\n\nexports.XmlHighlightRules = XmlHighlightRules;\n});\n\nace.define(\"ace/mode/html_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/css_highlight_rules\",\"ace/mode/javascript_highlight_rules\",\"ace/mode/xml_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar lang = acequire(\"../lib/lang\");\nvar CssHighlightRules = acequire(\"./css_highlight_rules\").CssHighlightRules;\nvar JavaScriptHighlightRules = acequire(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\nvar XmlHighlightRules = acequire(\"./xml_highlight_rules\").XmlHighlightRules;\n\nvar tagMap = lang.createMap({\n    a           : 'anchor',\n    button \t    : 'form',\n    form        : 'form',\n    img         : 'image',\n    input       : 'form',\n    label       : 'form',\n    option      : 'form',\n    script      : 'script',\n    select      : 'form',\n    textarea    : 'form',\n    style       : 'style',\n    table       : 'table',\n    tbody       : 'table',\n    td          : 'table',\n    tfoot       : 'table',\n    th          : 'table',\n    tr          : 'table'\n});\n\nvar HtmlHighlightRules = function() {\n    XmlHighlightRules.call(this);\n\n    this.addRules({\n        attributes: [{\n            include : \"tag_whitespace\"\n        }, {\n            token : \"entity.other.attribute-name.xml\",\n            regex : \"[-_a-zA-Z0-9:.]+\"\n        }, {\n            token : \"keyword.operator.attribute-equals.xml\",\n            regex : \"=\",\n            push : [{\n                include: \"tag_whitespace\"\n            }, {\n                token : \"string.unquoted.attribute-value.html\",\n                regex : \"[^<>='\\\"`\\\\s]+\",\n                next : \"pop\"\n            }, {\n                token : \"empty\",\n                regex : \"\",\n                next : \"pop\"\n            }]\n        }, {\n            include : \"attribute_value\"\n        }],\n        tag: [{\n            token : function(start, tag) {\n                var group = tagMap[tag];\n                return [\"meta.tag.punctuation.\" + (start == \"<\" ? \"\" : \"end-\") + \"tag-open.xml\",\n                    \"meta.tag\" + (group ? \".\" + group : \"\") + \".tag-name.xml\"];\n            },\n            regex : \"(</?)([-_a-zA-Z0-9:.]+)\",\n            next: \"tag_stuff\"\n        }],\n        tag_stuff: [\n            {include : \"attributes\"},\n            {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\", next : \"start\"}\n        ],\n    });\n\n    this.embedTagRules(CssHighlightRules, \"css-\", \"style\");\n    this.embedTagRules(new JavaScriptHighlightRules({noJSX: true}).getRules(), \"js-\", \"script\");\n\n    if (this.constructor === HtmlHighlightRules)\n        this.normalizeRules();\n};\n\noop.inherits(HtmlHighlightRules, XmlHighlightRules);\n\nexports.HtmlHighlightRules = HtmlHighlightRules;\n});\n\nace.define(\"ace/mode/swig\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/html_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar lang = acequire(\"../lib/lang\");\nvar HtmlHighlightRules = acequire(\"./html_highlight_rules\").HtmlHighlightRules;\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar SwigHighlightRules = function() {\n    HtmlHighlightRules.call(this);\n\n    var tags = \"autoescape|block|else|elif|extends|filter|for|if|import|include|macro|parent|raw|set|spaceless\";\n    tags = tags + \"|end\" + tags.replace(/\\|/g, \"|end\");\n    var filters = \"addslashes|capitalize|date|default|escape|first|groupBy|join|json|last|lower|raw|replace|reverse|safe|sort|striptags|title|uniq|upper|url_encode|url_decode\";\n    var special = \"first|last|index|index0|revindex|revindex0|key\"\n    var constants = \"null|none|true|false|loop\";\n    var operators = \"in|is|and|or|not|as|with|only\";\n\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword.control.swig\": tags,\n        \"support.function.swig\": filters+\"|\"+special,\n        \"keyword.operator.swig\":  operators,\n        \"constant.language.swig\": constants,\n    }, \"identifier\");\n    for (var rule in this.$rules) {\n        this.$rules[rule].unshift({\n            token : \"variable.other.readwrite.local.swig\",\n            regex : \"\\\\{\\\\{-?\",\n            push : \"swig-start\"\n        }, {\n            token : \"meta.tag.swig\",\n            regex : \"\\\\{%-?\",\n            push : \"swig-start\"\n        }, {\n            token : \"comment.block.swig\",\n            regex : \"\\\\{#-?\",\n            push : \"swig-comment\"\n        });\n    }\n    this.$rules[\"swig-comment\"] = [{\n        token : \"comment.block.swig\",\n        regex : \".*-?#}\",\n        next : \"pop\"\n    }];\n\n    this.$rules[\"swig-start\"] = [{\n        token : \"variable.other.readwrite.local.swig\",\n        regex : \"-?\\\\}\\\\}\",\n        next : \"pop\"\n    }, {\n        token : \"meta.tag.swig\",\n        regex : \"-?%\\\\}\",\n        next : \"pop\"\n    }, {\n        token : \"string\",\n        regex : \"'\",\n        next  : \"swig-qstring\"\n    }, {\n        token : \"string\",\n        regex : '\"',\n        next  : \"swig-qqstring\"\n    }, {\n        token : \"constant.numeric\", // hex\n        regex : \"0[xX][0-9a-fA-F]+\\\\b\"\n    }, {\n        token : \"constant.numeric\", // float\n        regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n    }, {\n        token : \"constant.language.boolean\",\n        regex : \"(?:true|false)\\\\b\"\n    }, {\n        token : keywordMapper,\n        regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n    }, {\n        token : \"keyword.operator.assignment\",\n        regex : \"=|~\"\n    }, {\n        token : \"keyword.operator.comparison\",\n        regex : \"==|!=|<|>|>=|<=|===\"\n    }, {\n        token : \"keyword.operator.arithmetic\",\n        regex : \"\\\\+|-|/|%|//|\\\\*|\\\\*\\\\*\"\n    }, {\n        token : \"keyword.operator.other\",\n        regex : \"\\\\.\\\\.|\\\\|\"\n    }, {\n        token : \"punctuation.operator\",\n        regex : /\\?|\\:|\\,|\\;|\\./\n    }, {\n        token : \"paren.lparen\",\n        regex : /[\\[\\({]/\n    }, {\n        token : \"paren.rparen\",\n        regex : /[\\])}]/\n    }, {\n        token : \"text\",\n        regex : \"\\\\s+\"\n    } ];\n    \n    this.$rules[\"swig-qqstring\"] = [{\n            token : \"constant.language.escape\",\n            regex : /\\\\[\\\\\"$#ntr]|#{[^\"}]*}/\n        }, {\n            token : \"string\",\n            regex : '\"',\n            next  : \"swig-start\"\n        }, {\n            defaultToken : \"string\"\n        }\n    ];\n\n    this.$rules[\"swig-qstring\"] = [{\n            token : \"constant.language.escape\",\n            regex : /\\\\[\\\\'ntr]}/\n        }, {\n            token : \"string\",\n            regex : \"'\",\n            next  : \"swig-start\"\n        }, {\n            defaultToken : \"string\"\n        }\n    ];\n    \n    this.normalizeRules();\n};\n\noop.inherits(SwigHighlightRules, TextHighlightRules);\n\nexports.SwigHighlightRules = SwigHighlightRules;\n});\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./node_modules/brace/mode/vhdl.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","VHDLHighlightRules","keywords","storageType","storageModifiers","keywordOperators","builtinConstants","keywordMapper","this","createKeywordMapper","keyword.operator","keyword","constant.language","storage.modifier","storage.type","$rules","start","token","regex","inherits","TextMode","Mode","HighlightRules","$behaviour","$defaultBehaviour","lineCommentStart","$id","call","prototype"],"mappings":"iGAAAA,IAAAC,OAAA,sHAAAC,EAAAC,EAAAC,GACA,aAEA,IAAAC,EAAAH,EAAA,cACAI,EAAAJ,EAAA,0BAAAI,mBAEAC,EAAA,WAIA,IAAAC,EAAA,waASAC,EAAA,qKAKAC,EAAA,iBAEAC,EAAA,+DAGAC,EAAA,kBAKAC,EAAAC,KAAAC,oBAAA,CACAC,mBAAAL,EACAM,QAAAT,EACAU,oBAAAN,EACAO,mBAAAT,EACAU,eAAAX,GACK,iBAELK,KAAAO,OAAA,CACAC,MAAA,EACAC,MAAA,UACAC,MAAA,SACS,CACTD,MAAA,SACAC,MAAA,SACS,CACTD,MAAA,SACAC,MAAA,SACS,CACTD,MAAA,mBACAC,MAAA,mDACS,CACTD,MAAA,UACAC,MAAA,kCACS,CACTD,MAAAV,EACAW,MAAA,+BACS,CACTD,MAAA,mBACAC,MAAA,0DACS,CACTD,MAAA,uBACAC,MAAA,uBACS,CACTD,MAAA,eACAC,MAAA,QACS,CACTD,MAAA,eACAC,MAAA,UACS,CACTD,MAAA,OACAC,MAAA,WAOAnB,EAAAoB,SAAAlB,EAAAD,GAEAH,EAAAI,uBAGAP,IAAAC,OAAA,sHAAAC,EAAAC,EAAAC,GACA,aAEA,IAAAC,EAAAH,EAAA,cACAwB,EAAAxB,EAAA,UAAAyB,KACApB,EAAAL,EAAA,0BAAAK,mBAEAoB,EAAA,WACAb,KAAAc,eAAArB,EACAO,KAAAe,WAAAf,KAAAgB,mBAEAzB,EAAAoB,SAAAE,EAAAD,GAEA,WAEAZ,KAAAiB,iBAAA,KAEAjB,KAAAkB,IAAA,iBACCC,KAAAN,EAAAO,WAED/B,EAAAwB","file":"js/chunk-2d20810a.96b91bb1.js","sourcesContent":["ace.define(\"ace/mode/vhdl_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar VHDLHighlightRules = function() {\n\n\n    \n    var keywords = \"access|after|ailas|all|architecture|assert|attribute|\"+\n                   \"begin|block|buffer|bus|case|component|configuration|\"+\n                   \"disconnect|downto|else|elsif|end|entity|file|for|function|\"+\n                   \"generate|generic|guarded|if|impure|in|inertial|inout|is|\"+\n                   \"label|linkage|literal|loop|mapnew|next|of|on|open|\"+\n                   \"others|out|port|process|pure|range|record|reject|\"+\n                   \"report|return|select|shared|subtype|then|to|transport|\"+\n                   \"type|unaffected|united|until|wait|when|while|with\";\n    \n    var storageType = \"bit|bit_vector|boolean|character|integer|line|natural|\"+\n                      \"positive|real|register|severity|signal|signed|\"+\n                      \"std_logic|std_logic_vector|string||text|time|unsigned|\"+\n                      \"variable\";\n    \n    var storageModifiers = \"array|constant\";\n    \n    var keywordOperators = \"abs|and|mod|nand|nor|not|rem|rol|ror|sla|sll|sra\"+\n                           \"srl|xnor|xor\";\n    \n    var builtinConstants = (\n        \"true|false|null\"\n    );\n\n\n    var keywordMapper = this.createKeywordMapper({\n        \"keyword.operator\": keywordOperators,\n        \"keyword\": keywords,\n        \"constant.language\": builtinConstants,\n        \"storage.modifier\": storageModifiers,\n        \"storage.type\": storageType\n    }, \"identifier\", true);\n\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment\",\n            regex : \"--.*$\"\n        }, {\n            token : \"string\",           // \" string\n            regex : '\".*?\"'\n        }, {\n            token : \"string\",           // ' string\n            regex : \"'.*?'\"\n        }, {\n            token : \"constant.numeric\", // float\n            regex : \"[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b\"\n        }, {\n            token : \"keyword\", // pre-compiler directives\n            regex : \"\\\\s*(?:library|package|use)\\\\b\"\n        }, {\n            token : keywordMapper,\n            regex : \"[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b\"\n        }, {\n            token : \"keyword.operator\",\n            regex : \"&|\\\\*|\\\\+|\\\\-|\\\\/|<|=|>|\\\\||=>|\\\\*\\\\*|:=|\\\\/=|>=|<=|<>\" \n        }, {\n              token : \"punctuation.operator\",\n              regex : \"\\\\'|\\\\:|\\\\,|\\\\;|\\\\.\"\n        },{\n            token : \"paren.lparen\",\n            regex : \"[[(]\"\n        }, {\n            token : \"paren.rparen\",\n            regex : \"[\\\\])]\"\n        }, {\n            token : \"text\",\n            regex : \"\\\\s+\"\n        } ]\n\n       \n    };\n};\n\noop.inherits(VHDLHighlightRules, TextHighlightRules);\n\nexports.VHDLHighlightRules = VHDLHighlightRules;\n});\n\nace.define(\"ace/mode/vhdl\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/vhdl_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar VHDLHighlightRules = acequire(\"./vhdl_highlight_rules\").VHDLHighlightRules;\n\nvar Mode = function() {\n    this.HighlightRules = VHDLHighlightRules;\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n\n    this.lineCommentStart = \"--\";\n\n    this.$id = \"ace/mode/vhdl\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n\n});\n"],"sourceRoot":""}
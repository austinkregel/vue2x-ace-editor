{"version":3,"sources":["webpack:///./node_modules/brace/mode/ini.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","escapeRe","IniHighlightRules","this","$rules","start","token","regex","push_","next","defaultToken","push","normalizeRules","metaData","fileTypes","keyEquivalent","name","scopeName","inherits","Range","BaseFoldMode","FoldMode","foldingStartMarker","getFoldWidgetRange","session","foldStyle","row","re","line","getLine","m","match","startName","startColumn","length","maxRow","getLength","startRow","endRow","test","lastIndexOf","endColumn","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$behaviour","$defaultBehaviour","lineCommentStart","blockComment","$id"],"mappings":"iGAAAA,IAAAC,OAAA,qHAAAC,EAAAC,EAAAC,GACA,aAEA,IAAAC,EAAAH,EAAA,cACAI,EAAAJ,EAAA,0BAAAI,mBAEAC,EAAA,2CAEAC,EAAA,WACAC,KAAAC,OAAA,CACAC,MAAA,EACAC,MAAA,qCACAC,MAAA,MACAC,MAAA,EACAF,MAAA,+BACAC,MAAA,MACAE,KAAA,OACa,CACbC,aAAA,kCAES,CACTJ,MAAA,qCACAC,MAAA,MACAC,MAAA,EACAF,MAAA,6BACAC,MAAA,MACAE,KAAA,OACa,CACbC,aAAA,gCAES,CACTJ,MAAA,8EACAC,MAAA,oCACS,CACTD,MAAA,6GACAC,MAAA,oBACS,CACTD,MAAA,0CACAC,MAAA,IACAI,KAAA,EACAL,MAAA,wCACAC,MAAA,IACAE,KAAA,OACa,CACbH,MAAA,2BACAC,MAAAN,GACa,CACbS,aAAA,8BAES,CACTJ,MAAA,0CACAC,MAAA,IACAI,KAAA,EACAL,MAAA,2BACAC,MAAAN,GACa,CACbK,MAAA,wCACAC,MAAA,IACAE,KAAA,OACa,CACbC,aAAA,gCAKAP,KAAAS,kBAGAV,EAAAW,SAAA,CACAC,UAAA,eACAC,cAAA,MACAC,KAAA,MACAC,UAAA,cAIAlB,EAAAmB,SAAAhB,EAAAF,GAEAH,EAAAK,sBAGAR,IAAAC,OAAA,sHAAAC,EAAAC,EAAAC,GACA,aAEA,IAAAC,EAAAH,EAAA,iBACAuB,EAAAvB,EAAA,eAAAuB,MACAC,EAAAxB,EAAA,eAAAyB,SAEAA,EAAAxB,EAAAwB,SAAA,aAEAtB,EAAAmB,SAAAG,EAAAD,GAEA,WAEAjB,KAAAmB,mBAAA,gCAEAnB,KAAAoB,mBAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAxB,KAAAmB,mBACAM,EAAAJ,EAAAK,QAAAH,GAEAI,EAAAF,EAAAG,MAAAJ,GAEA,GAAAG,EAAA,CAEA,IAAAE,EAAAF,EAAA,OAEAG,EAAAL,EAAAM,OACAC,EAAAX,EAAAY,YACAC,EAAAX,EACAY,EAAAZ,EAEA,QAAAA,EAAAS,EAEA,GADAP,EAAAJ,EAAAK,QAAAH,IACA,QAAAa,KAAAX,GAAA,CAGA,GADAE,EAAAF,EAAAG,MAAAJ,GACAG,GAAA,IAAAA,EAAA,GAAAU,YAAAR,EAAA,GACA,MAEAM,EAAAZ,EAGA,GAAAY,EAAAD,EAAA,CACA,IAAAI,EAAAjB,EAAAK,QAAAS,GAAAJ,OACA,WAAAf,EAAAkB,EAAAJ,EAAAK,EAAAG,OAICC,KAAArB,EAAAsB,aAIDjD,IAAAC,OAAA,2IAAAC,EAAAC,EAAAC,GACA,aAEA,IAAAC,EAAAH,EAAA,cACAgD,EAAAhD,EAAA,UAAAiD,KACA3C,EAAAN,EAAA,yBAAAM,kBACAmB,EAAAzB,EAAA,iBAAAyB,SAEAwB,EAAA,WACA1C,KAAA2C,eAAA5C,EACAC,KAAA4C,aAAA,IAAA1B,EACAlB,KAAA6C,WAAA7C,KAAA8C,mBAEAlD,EAAAmB,SAAA2B,EAAAD,GAEA,WACAzC,KAAA+C,iBAAA,IACA/C,KAAAgD,aAAA,KACAhD,KAAAiD,IAAA,gBACCV,KAAAG,EAAAF,WAED9C,EAAAgD","file":"js/chunk-2d216f64.a9280b1d.js","sourcesContent":["ace.define(\"ace/mode/ini_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar escapeRe = \"\\\\\\\\(?:[\\\\\\\\0abtrn;#=:]|x[a-fA-F\\\\d]{4})\";\n\nvar IniHighlightRules = function() {\n    this.$rules = {\n        start: [{\n            token: 'punctuation.definition.comment.ini',\n            regex: '#.*',\n            push_: [{\n                token: 'comment.line.number-sign.ini',\n                regex: '$|^',\n                next: 'pop'\n            }, {\n                defaultToken: 'comment.line.number-sign.ini'\n            }]\n        }, {\n            token: 'punctuation.definition.comment.ini',\n            regex: ';.*',\n            push_: [{\n                token: 'comment.line.semicolon.ini',\n                regex: '$|^',\n                next: 'pop'\n            }, {\n                defaultToken: 'comment.line.semicolon.ini'\n            }]\n        }, {\n            token: ['keyword.other.definition.ini', 'text', 'punctuation.separator.key-value.ini'],\n            regex: '\\\\b([a-zA-Z0-9_.-]+)\\\\b(\\\\s*)(=)'\n        }, {\n            token: ['punctuation.definition.entity.ini', 'constant.section.group-title.ini', 'punctuation.definition.entity.ini'],\n            regex: '^(\\\\[)(.*?)(\\\\])'\n        }, {\n            token: 'punctuation.definition.string.begin.ini',\n            regex: \"'\",\n            push: [{\n                token: 'punctuation.definition.string.end.ini',\n                regex: \"'\",\n                next: 'pop'\n            }, {\n                token: \"constant.language.escape\",\n                regex: escapeRe\n            }, {\n                defaultToken: 'string.quoted.single.ini'\n            }]\n        }, {\n            token: 'punctuation.definition.string.begin.ini',\n            regex: '\"',\n            push: [{\n                token: \"constant.language.escape\",\n                regex: escapeRe\n            }, {\n                token: 'punctuation.definition.string.end.ini',\n                regex: '\"',\n                next: 'pop'\n            }, {\n                defaultToken: 'string.quoted.double.ini'\n            }]\n        }]\n    };\n\n    this.normalizeRules();\n};\n\nIniHighlightRules.metaData = {\n    fileTypes: ['ini', 'conf'],\n    keyEquivalent: '^~I',\n    name: 'Ini',\n    scopeName: 'source.ini'\n};\n\n\noop.inherits(IniHighlightRules, TextHighlightRules);\n\nexports.IniHighlightRules = IniHighlightRules;\n});\n\nace.define(\"ace/mode/folding/ini\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function() {\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.foldingStartMarker = /^\\s*\\[([^\\])]*)]\\s*(?:$|[;#])/;\n\n    this.getFoldWidgetRange = function(session, foldStyle, row) {\n        var re = this.foldingStartMarker;\n        var line = session.getLine(row);\n        \n        var m = line.match(re);\n        \n        if (!m) return;\n        \n        var startName = m[1] + \".\";\n        \n        var startColumn = line.length;\n        var maxRow = session.getLength();\n        var startRow = row;\n        var endRow = row;\n\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            if (/^\\s*$/.test(line))\n                continue;\n            m = line.match(re);\n            if (m && m[1].lastIndexOf(startName, 0) !== 0)\n                break;\n\n            endRow = row;\n        }\n\n        if (endRow > startRow) {\n            var endColumn = session.getLine(endRow).length;\n            return new Range(startRow, startColumn, endRow, endColumn);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/ini\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/ini_highlight_rules\",\"ace/mode/folding/ini\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar IniHighlightRules = acequire(\"./ini_highlight_rules\").IniHighlightRules;\nvar FoldMode = acequire(\"./folding/ini\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = IniHighlightRules;\n    this.foldingRules = new FoldMode();\n    this.$behaviour = this.$defaultBehaviour;\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.lineCommentStart = \";\";\n    this.blockComment = null;\n    this.$id = \"ace/mode/ini\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./node_modules/brace/mode/bro.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","BroHighlightRules","this","$rules","start","token","regex","push","next","defaultToken","include","#disabled","comment","#preprocessor-rule-other","#string_escaped_char","#string_placeholder","normalizeRules","metaData","fileTypes","foldingStartMarker","foldingStopMarker","keyEquivalent","name","scopeName","inherits","Range","BaseFoldMode","FoldMode","commentRegex","RegExp","source","replace","end","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","session","foldStyle","row","line","getLine","test","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","match","i","index","openingBracketBlock","range","getCommentFoldRange","length","isMultiLine","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","indent","subRange","re","depth","m","exec","call","prototype","TextMode","Mode","HighlightRules","foldingRules","$id"],"mappings":"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","file":"js/chunk-2d0c9abe.91ac44e8.js","sourcesContent":["ace.define(\"ace/mode/bro_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar BroHighlightRules = function() {\n\n    this.$rules = {\n        start: [{\n            token: \"punctuation.definition.comment.bro\",\n            regex: /#/,\n            push: [{\n                token: \"comment.line.number-sign.bro\",\n                regex: /$/,\n                next: \"pop\"\n            }, {\n                defaultToken: \"comment.line.number-sign.bro\"\n            }]\n        }, {\n            token: \"keyword.control.bro\",\n            regex: /\\b(?:break|case|continue|else|for|if|return|switch|next|when|timeout|schedule)\\b/\n        }, {\n            token: [\n                \"meta.function.bro\",\n                \"meta.function.bro\",\n                \"storage.type.bro\",\n                \"meta.function.bro\",\n                \"entity.name.function.bro\",\n                \"meta.function.bro\"\n            ],\n            regex: /^(\\s*)(?:function|hook|event)(\\s*)(.*)(\\s*\\()(.*)(\\).*$)/\n        }, {\n            token: \"storage.type.bro\",\n            regex: /\\b(?:bool|enum|double|int|count|port|addr|subnet|any|file|interval|time|string|table|vector|set|record|pattern|hook)\\b/\n        }, {\n            token: \"storage.modifier.bro\",\n            regex: /\\b(?:global|const|redef|local|&(?:optional|rotate_interval|rotate_size|add_func|del_func|expire_func|expire_create|expire_read|expire_write|persistent|synchronized|encrypt|mergeable|priority|group|type_column|log|error_handler))\\b/\n        }, {\n            token: \"keyword.operator.bro\",\n            regex: /\\s*(?:\\||&&|(?:>|<|!)=?|==)\\s*|\\b!?in\\b/\n        }, {\n            token: \"constant.language.bro\",\n            regex: /\\b(?:T|F)\\b/\n        }, {\n            token: \"constant.numeric.bro\",\n            regex: /\\b(?:0(?:x|X)[0-9a-fA-F]*|(?:[0-9]+\\.?[0-9]*|\\.[0-9]+)(?:(?:e|E)(?:\\+|-)?[0-9]+)?)(?:\\/(?:tcp|udp|icmp)|\\s*(?:u?sec|min|hr|day)s?)?\\b/\n        }, {\n            token: \"punctuation.definition.string.begin.bro\",\n            regex: /\"/,\n            push: [{\n                token: \"punctuation.definition.string.end.bro\",\n                regex: /\"/,\n                next: \"pop\"\n            }, {\n                include: \"#string_escaped_char\"\n            }, {\n                include: \"#string_placeholder\"\n            }, {\n                defaultToken: \"string.quoted.double.bro\"\n            }]\n        }, {\n            token: \"punctuation.definition.string.begin.bro\",\n            regex: /\\//,\n            push: [{\n                token: \"punctuation.definition.string.end.bro\",\n                regex: /\\//,\n                next: \"pop\"\n            }, {\n                include: \"#string_escaped_char\"\n            }, {\n                include: \"#string_placeholder\"\n            }, {\n                defaultToken: \"string.quoted.regex.bro\"\n            }]\n        }, {\n            token: [\n                \"meta.preprocessor.bro.load\",\n                \"keyword.other.special-method.bro\"\n            ],\n            regex: /^(\\s*)(\\@load(?:-sigs)?)\\b/,\n            push: [{\n                token: [],\n                regex: /(?=\\#)|$/,\n                next: \"pop\"\n            }, {\n                defaultToken: \"meta.preprocessor.bro.load\"\n            }]\n        }, {\n            token: [\n                \"meta.preprocessor.bro.if\",\n                \"keyword.other.special-method.bro\",\n                \"meta.preprocessor.bro.if\"\n            ],\n            regex: /^(\\s*)(\\@endif|\\@if(?:n?def)?)(.*$)/,\n            push: [{\n                token: [],\n                regex: /$/,\n                next: \"pop\"\n            }, {\n                defaultToken: \"meta.preprocessor.bro.if\"\n            }]\n        }],\n        \"#disabled\": [{\n            token: \"text\",\n            regex: /^\\s*\\@if(?:n?def)?\\b.*$/,\n            push: [{\n                token: \"text\",\n                regex: /^\\s*\\@endif\\b.*$/,\n                next: \"pop\"\n            }, {\n                include: \"#disabled\"\n            }, {\n                include: \"#pragma-mark\"\n            }],\n            comment: \"eat nested preprocessor ifdefs\"\n        }],\n        \"#preprocessor-rule-other\": [{\n            token: [\n                \"text\",\n                \"meta.preprocessor.bro\",\n                \"meta.preprocessor.bro\",\n                \"text\"\n            ],\n            regex: /^(\\s*)(@if)((?:n?def)?)\\b(.*?)(?:(?=)|$)/,\n            push: [{\n                token: [\"text\", \"meta.preprocessor.bro\", \"text\"],\n                regex: /^(\\s*)(@endif)\\b(.*$)/,\n                next: \"pop\"\n            }, {\n                include: \"$base\"\n            }]\n        }],\n        \"#string_escaped_char\": [{\n            token: \"constant.character.escape.bro\",\n            regex: /\\\\(?:\\\\|[abefnprtv'\"?]|[0-3]\\d{,2}|[4-7]\\d?|x[a-fA-F0-9]{,2})/\n        }, {\n            token: \"invalid.illegal.unknown-escape.bro\",\n            regex: /\\\\./\n        }],\n        \"#string_placeholder\": [{\n            token: \"constant.other.placeholder.bro\",\n            regex: /%(?:\\d+\\$)?[#0\\- +']*[,;:_]?(?:-?\\d+|\\*(?:-?\\d+\\$)?)?(?:\\.(?:-?\\d+|\\*(?:-?\\d+\\$)?)?)?(?:hh|h|ll|l|j|t|z|q|L|vh|vl|v|hv|hl)?[diouxXDOUeEfFgGaACcSspn%]/\n        }, {\n            token: \"invalid.illegal.placeholder.bro\",\n            regex: /%/\n        }]\n    };\n\n    this.normalizeRules();\n};\n\nBroHighlightRules.metaData = {\n    fileTypes: [\"bro\"],\n    foldingStartMarker: \"^(\\\\@if(n?def)?)\",\n    foldingStopMarker: \"^\\\\@endif\",\n    keyEquivalent: \"@B\",\n    name: \"Bro\",\n    scopeName: \"source.bro\"\n};\n\n\noop.inherits(BroHighlightRules, TextHighlightRules);\n\nexports.BroHighlightRules = BroHighlightRules;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n\n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n\n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n\n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n\n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n\n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n\n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n\n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n\n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n\n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n\n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n\n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n\n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n\n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n\n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/bro\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/bro_highlight_rules\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar BroHighlightRules = acequire(\"./bro_highlight_rules\").BroHighlightRules;\nvar FoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = BroHighlightRules;\n    this.foldingRules = new FoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n    this.$id = \"ace/mode/bro\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n});\n"],"sourceRoot":""}
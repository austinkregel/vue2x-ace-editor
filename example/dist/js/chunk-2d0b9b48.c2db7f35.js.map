{"version":3,"sources":["webpack:///./node_modules/brace/mode/mask.js"],"names":["ace","define","acequire","exports","module","oop","TextHighlightRules","DocCommentHighlightRules","this","$rules","start","token","regex","getTagRule","defaultToken","caseInsensitive","inherits","getStartRule","next","getEndRule","identifierRe","JavaScriptHighlightRules","options","keywordMapper","createKeywordMapper","variable.language","keyword","storage.type","constant.language","support.function","constant.language.boolean","kwBeforeRe","escapedRe","no_regex","comments","property","regex_character_class","function_arguments","qqstring","consumeLineEnd","qstring","noES6","unshift","onMatch","val","state","stack","nextState","length","shift","indexOf","push","jsx","JSX","call","embedRules","normalizeRules","tagRegex","replace","jsxTag","offset","charAt","type","value","slice","substr","jsxJsRule","include","jsxAttributes","currentState","splice","stateName","reference","supportType","supportFunction","supportConstant","supportConstantColor","supportConstantFonts","numRe","pseudoElements","pseudoClasses","CssHighlightRules","support.constant","support.type","support.constant.color","support.constant.fonts","media","ruleset","url","strings","escapes","XmlHighlightRules","normalize","processing_instruction","doctype","int_subset","cdata","comment","attr_reference","tag","tag_whitespace","whitespace","string","attributes","attribute_value","constructor","embedTagRules","HighlightRules","prefix","prototype","lang","tagMap","createMap","a","button","form","img","input","label","option","script","select","textarea","style","table","tbody","td","tfoot","th","tr","HtmlHighlightRules","addRules","group","tag_stuff","getRules","escaped","ch","escapeRegExp","github_embed","MarkdownHighlightRules","basic","allowBlock","header","listblock-start","listblock","noEscape","blockquote","githubblock","MaskHighlightRules","const_FUNCTIONS","const_KEYWORDS","const_CONST","const_TAGS","TextRules","JSRules","CssRules","MDRules","HTMLRules","token_TAG","token_COMPO","token_KEYWORD","token_LANG","token_UTIL","token_ATTR","token_PUNKT","token_ITALIC","token_BOLD","token_LPARE","token_RPARE","Token","Blocks","syntax","rules","addJavaScript","name","escape","closeType","prfx","rootTokens","add","addCss","addMarkdown","addHtml","Rules","strPrfx","rgxEnd","tokens","test","arrayToMap","split","str","interpolation","tagHead","rgx","goUp","toLowerCase","expression","attribute","attr","multiline","block","word","goStart","mix","arguments","Range","MatchingBraceOutdent","checkOutdent","line","autoOutdent","doc","row","getLine","match","column","openBracePos","findMatchingBracket","indent","$getIndent","CstyleBehaviour","Behaviour","TokenIterator","CssBehaviour","inherit","action","editor","session","text","cursor","getCursorPosition","iterator","getCurrentToken","stepBackward","rightChar","substring","selection","range","selected","getTextRange","isMultiLine","end","BaseFoldMode","FoldMode","commentRegex","foldingStartMarker","RegExp","source","foldingStopMarker","singleLineBlockCommentRe","tripleStarBlockCommentRe","startRegionRe","_getFoldWidgetBase","getFoldWidget","foldStyle","fw","getFoldWidgetRange","forceMultiline","getCommentRegionBlock","i","index","openingBracketBlock","getCommentFoldRange","getSectionRange","closingBracketBlock","startIndent","search","startRow","startColumn","endRow","maxRow","getLength","subRange","re","depth","m","exec","TextMode","Mode","CStyleFoldMode","$outdent","$behaviour","foldingRules","lineCommentStart","blockComment","getNextLineIndent","tab","getTokenizer","getLineTokens","$id"],"mappings":"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","file":"js/chunk-2d0b9b48.c2db7f35.js","sourcesContent":["ace.define(\"ace/mode/doc_comment_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar DocCommentHighlightRules = function() {\n    this.$rules = {\n        \"start\" : [ {\n            token : \"comment.doc.tag\",\n            regex : \"@[\\\\w\\\\d_]+\" // TODO: fix email addresses\n        }, \n        DocCommentHighlightRules.getTagRule(),\n        {\n            defaultToken : \"comment.doc\",\n            caseInsensitive: true\n        }]\n    };\n};\n\noop.inherits(DocCommentHighlightRules, TextHighlightRules);\n\nDocCommentHighlightRules.getTagRule = function(start) {\n    return {\n        token : \"comment.doc.tag.storage.type\",\n        regex : \"\\\\b(?:TODO|FIXME|XXX|HACK)\\\\b\"\n    };\n};\n\nDocCommentHighlightRules.getStartRule = function(start) {\n    return {\n        token : \"comment.doc\", // doc comment\n        regex : \"\\\\/\\\\*(?=\\\\*)\",\n        next  : start\n    };\n};\n\nDocCommentHighlightRules.getEndRule = function (start) {\n    return {\n        token : \"comment.doc\", // closing comment\n        regex : \"\\\\*\\\\/\",\n        next  : start\n    };\n};\n\n\nexports.DocCommentHighlightRules = DocCommentHighlightRules;\n\n});\n\nace.define(\"ace/mode/javascript_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/doc_comment_highlight_rules\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar DocCommentHighlightRules = acequire(\"./doc_comment_highlight_rules\").DocCommentHighlightRules;\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\nvar identifierRe = \"[a-zA-Z\\\\$_\\u00a1-\\uffff][a-zA-Z\\\\d\\\\$_\\u00a1-\\uffff]*\";\n\nvar JavaScriptHighlightRules = function(options) {\n    var keywordMapper = this.createKeywordMapper({\n        \"variable.language\":\n            \"Array|Boolean|Date|Function|Iterator|Number|Object|RegExp|String|Proxy|\"  + // Constructors\n            \"Namespace|QName|XML|XMLList|\"                                             + // E4X\n            \"ArrayBuffer|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|\"   +\n            \"Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray|\"                    +\n            \"Error|EvalError|InternalError|RangeError|ReferenceError|StopIteration|\"   + // Errors\n            \"SyntaxError|TypeError|URIError|\"                                          +\n            \"decodeURI|decodeURIComponent|encodeURI|encodeURIComponent|eval|isFinite|\" + // Non-constructor functions\n            \"isNaN|parseFloat|parseInt|\"                                               +\n            \"JSON|Math|\"                                                               + // Other\n            \"this|arguments|prototype|window|document\"                                 , // Pseudo\n        \"keyword\":\n            \"const|yield|import|get|set|async|await|\" +\n            \"break|case|catch|continue|default|delete|do|else|finally|for|function|\" +\n            \"if|in|of|instanceof|new|return|switch|throw|try|typeof|let|var|while|with|debugger|\" +\n            \"__parent__|__count__|escape|unescape|with|__proto__|\" +\n            \"class|enum|extends|super|export|implements|private|public|interface|package|protected|static\",\n        \"storage.type\":\n            \"const|let|var|function\",\n        \"constant.language\":\n            \"null|Infinity|NaN|undefined\",\n        \"support.function\":\n            \"alert\",\n        \"constant.language.boolean\": \"true|false\"\n    }, \"identifier\");\n    var kwBeforeRe = \"case|do|else|finally|in|instanceof|return|throw|try|typeof|yield|void\";\n\n    var escapedRe = \"\\\\\\\\(?:x[0-9a-fA-F]{2}|\" + // hex\n        \"u[0-9a-fA-F]{4}|\" + // unicode\n        \"u{[0-9a-fA-F]{1,6}}|\" + // es6 unicode\n        \"[0-2][0-7]{0,2}|\" + // oct\n        \"3[0-7][0-7]?|\" + // oct\n        \"[4-7][0-7]?|\" + //oct\n        \".)\";\n\n    this.$rules = {\n        \"no_regex\" : [\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            comments(\"no_regex\"),\n            {\n                token : \"string\",\n                regex : \"'(?=.)\",\n                next  : \"qstring\"\n            }, {\n                token : \"string\",\n                regex : '\"(?=.)',\n                next  : \"qqstring\"\n            }, {\n                token : \"constant.numeric\", // hexadecimal, octal and binary\n                regex : /0(?:[xX][0-9a-fA-F]+|[oO][0-7]+|[bB][01]+)\\b/\n            }, {\n                token : \"constant.numeric\", // decimal integers and floats\n                regex : /(?:\\d\\d*(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n            }, {\n                token : [\n                    \"storage.type\", \"punctuation.operator\", \"support.function\",\n                    \"punctuation.operator\", \"entity.name.function\", \"text\",\"keyword.operator\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\.)(prototype)(\\\\.)(\" + identifierRe +\")(\\\\s*)(=)\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\",\n                    \"keyword.operator\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe +\")(\\\\s*)(=)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"entity.name.function\", \"text\", \"keyword.operator\", \"text\", \"storage.type\",\n                    \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe +\")(\\\\s*)(=)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\",\n                    \"keyword.operator\", \"text\",\n                    \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe +\")(\\\\s*)(=)(\\\\s*)(function)(\\\\s+)(\\\\w+)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(function)(\\\\s+)(\" + identifierRe + \")(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"entity.name.function\", \"text\", \"punctuation.operator\",\n                    \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\s*)(:)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : [\n                    \"text\", \"text\", \"storage.type\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(:)(\\\\s*)(function)(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : \"keyword\",\n                regex : \"from(?=\\\\s*('|\\\"))\"\n            }, {\n                token : \"keyword\",\n                regex : \"(?:\" + kwBeforeRe + \")\\\\b\",\n                next : \"start\"\n            }, {\n                token : [\"support.constant\"],\n                regex : /that\\b/\n            }, {\n                token : [\"storage.type\", \"punctuation.operator\", \"support.function.firebug\"],\n                regex : /(console)(\\.)(warn|info|log|error|time|trace|timeEnd|assert)\\b/\n            }, {\n                token : keywordMapper,\n                regex : identifierRe\n            }, {\n                token : \"punctuation.operator\",\n                regex : /[.](?![.])/,\n                next  : \"property\"\n            }, {\n                token : \"storage.type\",\n                regex : /=>/\n            }, {\n                token : \"keyword.operator\",\n                regex : /--|\\+\\+|\\.{3}|===|==|=|!=|!==|<+=?|>+=?|!|&&|\\|\\||\\?:|[!$%&*+\\-~\\/^]=?/,\n                next  : \"start\"\n            }, {\n                token : \"punctuation.operator\",\n                regex : /[?:,;.]/,\n                next  : \"start\"\n            }, {\n                token : \"paren.lparen\",\n                regex : /[\\[({]/,\n                next  : \"start\"\n            }, {\n                token : \"paren.rparen\",\n                regex : /[\\])}]/\n            }, {\n                token: \"comment\",\n                regex: /^#!.*$/\n            }\n        ],\n        property: [{\n                token : \"text\",\n                regex : \"\\\\s+\"\n            }, {\n                token : [\n                    \"storage.type\", \"punctuation.operator\", \"entity.name.function\", \"text\",\n                    \"keyword.operator\", \"text\",\n                    \"storage.type\", \"text\", \"entity.name.function\", \"text\", \"paren.lparen\"\n                ],\n                regex : \"(\" + identifierRe + \")(\\\\.)(\" + identifierRe +\")(\\\\s*)(=)(\\\\s*)(function)(?:(\\\\s+)(\\\\w+))?(\\\\s*)(\\\\()\",\n                next: \"function_arguments\"\n            }, {\n                token : \"punctuation.operator\",\n                regex : /[.](?![.])/\n            }, {\n                token : \"support.function\",\n                regex : /(s(?:h(?:ift|ow(?:Mod(?:elessDialog|alDialog)|Help))|croll(?:X|By(?:Pages|Lines)?|Y|To)?|t(?:op|rike)|i(?:n|zeToContent|debar|gnText)|ort|u(?:p|b(?:str(?:ing)?)?)|pli(?:ce|t)|e(?:nd|t(?:Re(?:sizable|questHeader)|M(?:i(?:nutes|lliseconds)|onth)|Seconds|Ho(?:tKeys|urs)|Year|Cursor|Time(?:out)?|Interval|ZOptions|Date|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Date|FullYear)|FullYear|Active)|arch)|qrt|lice|avePreferences|mall)|h(?:ome|andleEvent)|navigate|c(?:har(?:CodeAt|At)|o(?:s|n(?:cat|textual|firm)|mpile)|eil|lear(?:Timeout|Interval)?|a(?:ptureEvents|ll)|reate(?:StyleSheet|Popup|EventObject))|t(?:o(?:GMTString|S(?:tring|ource)|U(?:TCString|pperCase)|Lo(?:caleString|werCase))|est|a(?:n|int(?:Enabled)?))|i(?:s(?:NaN|Finite)|ndexOf|talics)|d(?:isableExternalCapture|ump|etachEvent)|u(?:n(?:shift|taint|escape|watch)|pdateCommands)|j(?:oin|avaEnabled)|p(?:o(?:p|w)|ush|lugins.refresh|a(?:ddings|rse(?:Int|Float)?)|r(?:int|ompt|eference))|e(?:scape|nableExternalCapture|val|lementFromPoint|x(?:p|ec(?:Script|Command)?))|valueOf|UTC|queryCommand(?:State|Indeterm|Enabled|Value)|f(?:i(?:nd|le(?:ModifiedDate|Size|CreatedDate|UpdatedDate)|xed)|o(?:nt(?:size|color)|rward)|loor|romCharCode)|watch|l(?:ink|o(?:ad|g)|astIndexOf)|a(?:sin|nchor|cos|t(?:tachEvent|ob|an(?:2)?)|pply|lert|b(?:s|ort))|r(?:ou(?:nd|teEvents)|e(?:size(?:By|To)|calc|turnValue|place|verse|l(?:oad|ease(?:Capture|Events)))|andom)|g(?:o|et(?:ResponseHeader|M(?:i(?:nutes|lliseconds)|onth)|Se(?:conds|lection)|Hours|Year|Time(?:zoneOffset)?|Da(?:y|te)|UTC(?:M(?:i(?:nutes|lliseconds)|onth)|Seconds|Hours|Da(?:y|te)|FullYear)|FullYear|A(?:ttention|llResponseHeaders)))|m(?:in|ove(?:B(?:y|elow)|To(?:Absolute)?|Above)|ergeAttributes|a(?:tch|rgins|x))|b(?:toa|ig|o(?:ld|rderWidths)|link|ack))\\b(?=\\()/\n            }, {\n                token : \"support.function.dom\",\n                regex : /(s(?:ub(?:stringData|mit)|plitText|e(?:t(?:NamedItem|Attribute(?:Node)?)|lect))|has(?:ChildNodes|Feature)|namedItem|c(?:l(?:ick|o(?:se|neNode))|reate(?:C(?:omment|DATASection|aption)|T(?:Head|extNode|Foot)|DocumentFragment|ProcessingInstruction|E(?:ntityReference|lement)|Attribute))|tabIndex|i(?:nsert(?:Row|Before|Cell|Data)|tem)|open|delete(?:Row|C(?:ell|aption)|T(?:Head|Foot)|Data)|focus|write(?:ln)?|a(?:dd|ppend(?:Child|Data))|re(?:set|place(?:Child|Data)|move(?:NamedItem|Child|Attribute(?:Node)?)?)|get(?:NamedItem|Element(?:sBy(?:Name|TagName|ClassName)|ById)|Attribute(?:Node)?)|blur)\\b(?=\\()/\n            }, {\n                token :  \"support.constant\",\n                regex : /(s(?:ystemLanguage|cr(?:ipts|ollbars|een(?:X|Y|Top|Left))|t(?:yle(?:Sheets)?|atus(?:Text|bar)?)|ibling(?:Below|Above)|ource|uffixes|e(?:curity(?:Policy)?|l(?:ection|f)))|h(?:istory|ost(?:name)?|as(?:h|Focus))|y|X(?:MLDocument|SLDocument)|n(?:ext|ame(?:space(?:s|URI)|Prop))|M(?:IN_VALUE|AX_VALUE)|c(?:haracterSet|o(?:n(?:structor|trollers)|okieEnabled|lorDepth|mp(?:onents|lete))|urrent|puClass|l(?:i(?:p(?:boardData)?|entInformation)|osed|asses)|alle(?:e|r)|rypto)|t(?:o(?:olbar|p)|ext(?:Transform|Indent|Decoration|Align)|ags)|SQRT(?:1_2|2)|i(?:n(?:ner(?:Height|Width)|put)|ds|gnoreCase)|zIndex|o(?:scpu|n(?:readystatechange|Line)|uter(?:Height|Width)|p(?:sProfile|ener)|ffscreenBuffering)|NEGATIVE_INFINITY|d(?:i(?:splay|alog(?:Height|Top|Width|Left|Arguments)|rectories)|e(?:scription|fault(?:Status|Ch(?:ecked|arset)|View)))|u(?:ser(?:Profile|Language|Agent)|n(?:iqueID|defined)|pdateInterval)|_content|p(?:ixelDepth|ort|ersonalbar|kcs11|l(?:ugins|atform)|a(?:thname|dding(?:Right|Bottom|Top|Left)|rent(?:Window|Layer)?|ge(?:X(?:Offset)?|Y(?:Offset)?))|r(?:o(?:to(?:col|type)|duct(?:Sub)?|mpter)|e(?:vious|fix)))|e(?:n(?:coding|abledPlugin)|x(?:ternal|pando)|mbeds)|v(?:isibility|endor(?:Sub)?|Linkcolor)|URLUnencoded|P(?:I|OSITIVE_INFINITY)|f(?:ilename|o(?:nt(?:Size|Family|Weight)|rmName)|rame(?:s|Element)|gColor)|E|whiteSpace|l(?:i(?:stStyleType|n(?:eHeight|kColor))|o(?:ca(?:tion(?:bar)?|lName)|wsrc)|e(?:ngth|ft(?:Context)?)|a(?:st(?:M(?:odified|atch)|Index|Paren)|yer(?:s|X)|nguage))|a(?:pp(?:MinorVersion|Name|Co(?:deName|re)|Version)|vail(?:Height|Top|Width|Left)|ll|r(?:ity|guments)|Linkcolor|bove)|r(?:ight(?:Context)?|e(?:sponse(?:XML|Text)|adyState))|global|x|m(?:imeTypes|ultiline|enubar|argin(?:Right|Bottom|Top|Left))|L(?:N(?:10|2)|OG(?:10E|2E))|b(?:o(?:ttom|rder(?:Width|RightWidth|BottomWidth|Style|Color|TopWidth|LeftWidth))|ufferDepth|elow|ackground(?:Color|Image)))\\b/\n            }, {\n                token : \"identifier\",\n                regex : identifierRe\n            }, {\n                regex: \"\",\n                token: \"empty\",\n                next: \"no_regex\"\n            }\n        ],\n        \"start\": [\n            DocCommentHighlightRules.getStartRule(\"doc-start\"),\n            comments(\"start\"),\n            {\n                token: \"string.regexp\",\n                regex: \"\\\\/\",\n                next: \"regex\"\n            }, {\n                token : \"text\",\n                regex : \"\\\\s+|^$\",\n                next : \"start\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"regex\": [\n            {\n                token: \"regexp.keyword.operator\",\n                regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n            }, {\n                token: \"string.regexp\",\n                regex: \"/[sxngimy]*\",\n                next: \"no_regex\"\n            }, {\n                token : \"invalid\",\n                regex: /\\{\\d+\\b,?\\d*\\}[+*]|[+*$^?][+*]|[$^][?]|\\?{3,}/\n            }, {\n                token : \"constant.language.escape\",\n                regex: /\\(\\?[:=!]|\\)|\\{\\d+\\b,?\\d*\\}|[+*]\\?|[()$^+*?.]/\n            }, {\n                token : \"constant.language.delimiter\",\n                regex: /\\|/\n            }, {\n                token: \"constant.language.escape\",\n                regex: /\\[\\^?/,\n                next: \"regex_character_class\"\n            }, {\n                token: \"empty\",\n                regex: \"$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string.regexp\"\n            }\n        ],\n        \"regex_character_class\": [\n            {\n                token: \"regexp.charclass.keyword.operator\",\n                regex: \"\\\\\\\\(?:u[\\\\da-fA-F]{4}|x[\\\\da-fA-F]{2}|.)\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: \"]\",\n                next: \"regex\"\n            }, {\n                token: \"constant.language.escape\",\n                regex: \"-\"\n            }, {\n                token: \"empty\",\n                regex: \"$\",\n                next: \"no_regex\"\n            }, {\n                defaultToken: \"string.regexp.charachterclass\"\n            }\n        ],\n        \"function_arguments\": [\n            {\n                token: \"variable.parameter\",\n                regex: identifierRe\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"[, ]+\"\n            }, {\n                token: \"punctuation.operator\",\n                regex: \"$\"\n            }, {\n                token: \"empty\",\n                regex: \"\",\n                next: \"no_regex\"\n            }\n        ],\n        \"qqstring\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : escapedRe\n            }, {\n                token : \"string\",\n                regex : \"\\\\\\\\$\",\n                consumeLineEnd  : true\n            }, {\n                token : \"string\",\n                regex : '\"|$',\n                next  : \"no_regex\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ],\n        \"qstring\" : [\n            {\n                token : \"constant.language.escape\",\n                regex : escapedRe\n            }, {\n                token : \"string\",\n                regex : \"\\\\\\\\$\",\n                consumeLineEnd  : true\n            }, {\n                token : \"string\",\n                regex : \"'|$\",\n                next  : \"no_regex\"\n            }, {\n                defaultToken: \"string\"\n            }\n        ]\n    };\n\n\n    if (!options || !options.noES6) {\n        this.$rules.no_regex.unshift({\n            regex: \"[{}]\", onMatch: function(val, state, stack) {\n                this.next = val == \"{\" ? this.nextState : \"\";\n                if (val == \"{\" && stack.length) {\n                    stack.unshift(\"start\", state);\n                }\n                else if (val == \"}\" && stack.length) {\n                    stack.shift();\n                    this.next = stack.shift();\n                    if (this.next.indexOf(\"string\") != -1 || this.next.indexOf(\"jsx\") != -1)\n                        return \"paren.quasi.end\";\n                }\n                return val == \"{\" ? \"paren.lparen\" : \"paren.rparen\";\n            },\n            nextState: \"start\"\n        }, {\n            token : \"string.quasi.start\",\n            regex : /`/,\n            push  : [{\n                token : \"constant.language.escape\",\n                regex : escapedRe\n            }, {\n                token : \"paren.quasi.start\",\n                regex : /\\${/,\n                push  : \"start\"\n            }, {\n                token : \"string.quasi.end\",\n                regex : /`/,\n                next  : \"pop\"\n            }, {\n                defaultToken: \"string.quasi\"\n            }]\n        });\n\n        if (!options || options.jsx != false)\n            JSX.call(this);\n    }\n\n    this.embedRules(DocCommentHighlightRules, \"doc-\",\n        [ DocCommentHighlightRules.getEndRule(\"no_regex\") ]);\n\n    this.normalizeRules();\n};\n\noop.inherits(JavaScriptHighlightRules, TextHighlightRules);\n\nfunction JSX() {\n    var tagRegex = identifierRe.replace(\"\\\\d\", \"\\\\d\\\\-\");\n    var jsxTag = {\n        onMatch : function(val, state, stack) {\n            var offset = val.charAt(1) == \"/\" ? 2 : 1;\n            if (offset == 1) {\n                if (state != this.nextState)\n                    stack.unshift(this.next, this.nextState, 0);\n                else\n                    stack.unshift(this.next);\n                stack[2]++;\n            } else if (offset == 2) {\n                if (state == this.nextState) {\n                    stack[1]--;\n                    if (!stack[1] || stack[1] < 0) {\n                        stack.shift();\n                        stack.shift();\n                    }\n                }\n            }\n            return [{\n                type: \"meta.tag.punctuation.\" + (offset == 1 ? \"\" : \"end-\") + \"tag-open.xml\",\n                value: val.slice(0, offset)\n            }, {\n                type: \"meta.tag.tag-name.xml\",\n                value: val.substr(offset)\n            }];\n        },\n        regex : \"</?\" + tagRegex + \"\",\n        next: \"jsxAttributes\",\n        nextState: \"jsx\"\n    };\n    this.$rules.start.unshift(jsxTag);\n    var jsxJsRule = {\n        regex: \"{\",\n        token: \"paren.quasi.start\",\n        push: \"start\"\n    };\n    this.$rules.jsx = [\n        jsxJsRule,\n        jsxTag,\n        {include : \"reference\"},\n        {defaultToken: \"string\"}\n    ];\n    this.$rules.jsxAttributes = [{\n        token : \"meta.tag.punctuation.tag-close.xml\",\n        regex : \"/?>\",\n        onMatch : function(value, currentState, stack) {\n            if (currentState == stack[0])\n                stack.shift();\n            if (value.length == 2) {\n                if (stack[0] == this.nextState)\n                    stack[1]--;\n                if (!stack[1] || stack[1] < 0) {\n                    stack.splice(0, 2);\n                }\n            }\n            this.next = stack[0] || \"start\";\n            return [{type: this.token, value: value}];\n        },\n        nextState: \"jsx\"\n    },\n    jsxJsRule,\n    comments(\"jsxAttributes\"),\n    {\n        token : \"entity.other.attribute-name.xml\",\n        regex : tagRegex\n    }, {\n        token : \"keyword.operator.attribute-equals.xml\",\n        regex : \"=\"\n    }, {\n        token : \"text.tag-whitespace.xml\",\n        regex : \"\\\\s+\"\n    }, {\n        token : \"string.attribute-value.xml\",\n        regex : \"'\",\n        stateName : \"jsx_attr_q\",\n        push : [\n            {token : \"string.attribute-value.xml\", regex: \"'\", next: \"pop\"},\n            {include : \"reference\"},\n            {defaultToken : \"string.attribute-value.xml\"}\n        ]\n    }, {\n        token : \"string.attribute-value.xml\",\n        regex : '\"',\n        stateName : \"jsx_attr_qq\",\n        push : [\n            {token : \"string.attribute-value.xml\", regex: '\"', next: \"pop\"},\n            {include : \"reference\"},\n            {defaultToken : \"string.attribute-value.xml\"}\n        ]\n    },\n    jsxTag\n    ];\n    this.$rules.reference = [{\n        token : \"constant.language.escape.reference.xml\",\n        regex : \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n    }];\n}\n\nfunction comments(next) {\n    return [\n        {\n            token : \"comment\", // multi line comment\n            regex : /\\/\\*/,\n            next: [\n                DocCommentHighlightRules.getTagRule(),\n                {token : \"comment\", regex : \"\\\\*\\\\/\", next : next || \"pop\"},\n                {defaultToken : \"comment\", caseInsensitive: true}\n            ]\n        }, {\n            token : \"comment\",\n            regex : \"\\\\/\\\\/\",\n            next: [\n                DocCommentHighlightRules.getTagRule(),\n                {token : \"comment\", regex : \"$|^\", next : next || \"pop\"},\n                {defaultToken : \"comment\", caseInsensitive: true}\n            ]\n        }\n    ];\n}\nexports.JavaScriptHighlightRules = JavaScriptHighlightRules;\n});\n\nace.define(\"ace/mode/css_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar lang = acequire(\"../lib/lang\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\nvar supportType = exports.supportType = \"align-content|align-items|align-self|all|animation|animation-delay|animation-direction|animation-duration|animation-fill-mode|animation-iteration-count|animation-name|animation-play-state|animation-timing-function|backface-visibility|background|background-attachment|background-blend-mode|background-clip|background-color|background-image|background-origin|background-position|background-repeat|background-size|border|border-bottom|border-bottom-color|border-bottom-left-radius|border-bottom-right-radius|border-bottom-style|border-bottom-width|border-collapse|border-color|border-image|border-image-outset|border-image-repeat|border-image-slice|border-image-source|border-image-width|border-left|border-left-color|border-left-style|border-left-width|border-radius|border-right|border-right-color|border-right-style|border-right-width|border-spacing|border-style|border-top|border-top-color|border-top-left-radius|border-top-right-radius|border-top-style|border-top-width|border-width|bottom|box-shadow|box-sizing|caption-side|clear|clip|color|column-count|column-fill|column-gap|column-rule|column-rule-color|column-rule-style|column-rule-width|column-span|column-width|columns|content|counter-increment|counter-reset|cursor|direction|display|empty-cells|filter|flex|flex-basis|flex-direction|flex-flow|flex-grow|flex-shrink|flex-wrap|float|font|font-family|font-size|font-size-adjust|font-stretch|font-style|font-variant|font-weight|hanging-punctuation|height|justify-content|left|letter-spacing|line-height|list-style|list-style-image|list-style-position|list-style-type|margin|margin-bottom|margin-left|margin-right|margin-top|max-height|max-width|min-height|min-width|nav-down|nav-index|nav-left|nav-right|nav-up|opacity|order|outline|outline-color|outline-offset|outline-style|outline-width|overflow|overflow-x|overflow-y|padding|padding-bottom|padding-left|padding-right|padding-top|page-break-after|page-break-before|page-break-inside|perspective|perspective-origin|position|quotes|resize|right|tab-size|table-layout|text-align|text-align-last|text-decoration|text-decoration-color|text-decoration-line|text-decoration-style|text-indent|text-justify|text-overflow|text-shadow|text-transform|top|transform|transform-origin|transform-style|transition|transition-delay|transition-duration|transition-property|transition-timing-function|unicode-bidi|vertical-align|visibility|white-space|width|word-break|word-spacing|word-wrap|z-index\";\nvar supportFunction = exports.supportFunction = \"rgb|rgba|url|attr|counter|counters\";\nvar supportConstant = exports.supportConstant = \"absolute|after-edge|after|all-scroll|all|alphabetic|always|antialiased|armenian|auto|avoid-column|avoid-page|avoid|balance|baseline|before-edge|before|below|bidi-override|block-line-height|block|bold|bolder|border-box|both|bottom|box|break-all|break-word|capitalize|caps-height|caption|center|central|char|circle|cjk-ideographic|clone|close-quote|col-resize|collapse|column|consider-shifts|contain|content-box|cover|crosshair|cubic-bezier|dashed|decimal-leading-zero|decimal|default|disabled|disc|disregard-shifts|distribute-all-lines|distribute-letter|distribute-space|distribute|dotted|double|e-resize|ease-in|ease-in-out|ease-out|ease|ellipsis|end|exclude-ruby|fill|fixed|georgian|glyphs|grid-height|groove|hand|hanging|hebrew|help|hidden|hiragana-iroha|hiragana|horizontal|icon|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space|ideographic|inactive|include-ruby|inherit|initial|inline-block|inline-box|inline-line-height|inline-table|inline|inset|inside|inter-ideograph|inter-word|invert|italic|justify|katakana-iroha|katakana|keep-all|last|left|lighter|line-edge|line-through|line|linear|list-item|local|loose|lower-alpha|lower-greek|lower-latin|lower-roman|lowercase|lr-tb|ltr|mathematical|max-height|max-size|medium|menu|message-box|middle|move|n-resize|ne-resize|newspaper|no-change|no-close-quote|no-drop|no-open-quote|no-repeat|none|normal|not-allowed|nowrap|nw-resize|oblique|open-quote|outset|outside|overline|padding-box|page|pointer|pre-line|pre-wrap|pre|preserve-3d|progress|relative|repeat-x|repeat-y|repeat|replaced|reset-size|ridge|right|round|row-resize|rtl|s-resize|scroll|se-resize|separate|slice|small-caps|small-caption|solid|space|square|start|static|status-bar|step-end|step-start|steps|stretch|strict|sub|super|sw-resize|table-caption|table-cell|table-column-group|table-column|table-footer-group|table-header-group|table-row-group|table-row|table|tb-rl|text-after-edge|text-before-edge|text-bottom|text-size|text-top|text|thick|thin|transparent|underline|upper-alpha|upper-latin|upper-roman|uppercase|use-script|vertical-ideographic|vertical-text|visible|w-resize|wait|whitespace|z-index|zero\";\nvar supportConstantColor = exports.supportConstantColor = \"aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen\";\nvar supportConstantFonts = exports.supportConstantFonts = \"arial|century|comic|courier|cursive|fantasy|garamond|georgia|helvetica|impact|lucida|symbol|system|tahoma|times|trebuchet|utopia|verdana|webdings|sans-serif|serif|monospace\";\n\nvar numRe = exports.numRe = \"\\\\-?(?:(?:[0-9]+(?:\\\\.[0-9]+)?)|(?:\\\\.[0-9]+))\";\nvar pseudoElements = exports.pseudoElements = \"(\\\\:+)\\\\b(after|before|first-letter|first-line|moz-selection|selection)\\\\b\";\nvar pseudoClasses  = exports.pseudoClasses =  \"(:)\\\\b(active|checked|disabled|empty|enabled|first-child|first-of-type|focus|hover|indeterminate|invalid|last-child|last-of-type|link|not|nth-child|nth-last-child|nth-last-of-type|nth-of-type|only-child|only-of-type|acequired|root|target|valid|visited)\\\\b\";\n\nvar CssHighlightRules = function() {\n\n    var keywordMapper = this.createKeywordMapper({\n        \"support.function\": supportFunction,\n        \"support.constant\": supportConstant,\n        \"support.type\": supportType,\n        \"support.constant.color\": supportConstantColor,\n        \"support.constant.fonts\": supportConstantFonts\n    }, \"text\", true);\n\n    this.$rules = {\n        \"start\" : [{\n            include : [\"strings\", \"url\", \"comments\"]\n        }, {\n            token: \"paren.lparen\",\n            regex: \"\\\\{\",\n            next:  \"ruleset\"\n        }, {\n            token: \"paren.rparen\",\n            regex: \"\\\\}\"\n        }, {\n            token: \"string\",\n            regex: \"@\",\n            next:  \"media\"\n        }, {\n            token: \"keyword\",\n            regex: \"#[a-z0-9-_]+\"\n        }, {\n            token: \"keyword\",\n            regex: \"%\"\n        }, {\n            token: \"variable\",\n            regex: \"\\\\.[a-z0-9-_]+\"\n        }, {\n            token: \"string\",\n            regex: \":[a-z0-9-_]+\"\n        }, {\n            token : \"constant.numeric\",\n            regex : numRe\n        }, {\n            token: \"constant\",\n            regex: \"[a-z0-9-_]+\"\n        }, {\n            caseInsensitive: true\n        }],\n\n        \"media\": [{\n            include : [\"strings\", \"url\", \"comments\"]\n        }, {\n            token: \"paren.lparen\",\n            regex: \"\\\\{\",\n            next:  \"start\"\n        }, {\n            token: \"paren.rparen\",\n            regex: \"\\\\}\",\n            next:  \"start\"\n        }, {\n            token: \"string\",\n            regex: \";\",\n            next:  \"start\"\n        }, {\n            token: \"keyword\",\n            regex: \"(?:media|supports|document|charset|import|namespace|media|supports|document\"\n                + \"|page|font|keyframes|viewport|counter-style|font-feature-values\"\n                + \"|swash|ornaments|annotation|stylistic|styleset|character-variant)\"\n        }],\n\n        \"comments\" : [{\n            token: \"comment\", // multi line comment\n            regex: \"\\\\/\\\\*\",\n            push: [{\n                token : \"comment\",\n                regex : \"\\\\*\\\\/\",\n                next : \"pop\"\n            }, {\n                defaultToken : \"comment\"\n            }]\n        }],\n\n        \"ruleset\" : [{\n            regex : \"-(webkit|ms|moz|o)-\",\n            token : \"text\"\n        }, {\n            token : \"paren.rparen\",\n            regex : \"\\\\}\",\n            next : \"start\"\n        }, {\n            include : [\"strings\", \"url\", \"comments\"]\n        }, {\n            token : [\"constant.numeric\", \"keyword\"],\n            regex : \"(\" + numRe + \")(ch|cm|deg|em|ex|fr|gd|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vm|vw|%)\"\n        }, {\n            token : \"constant.numeric\",\n            regex : numRe\n        }, {\n            token : \"constant.numeric\",  // hex6 color\n            regex : \"#[a-f0-9]{6}\"\n        }, {\n            token : \"constant.numeric\", // hex3 color\n            regex : \"#[a-f0-9]{3}\"\n        }, {\n            token : [\"punctuation\", \"entity.other.attribute-name.pseudo-element.css\"],\n            regex : pseudoElements\n        }, {\n            token : [\"punctuation\", \"entity.other.attribute-name.pseudo-class.css\"],\n            regex : pseudoClasses\n        }, {\n            include: \"url\"\n        }, {\n            token : keywordMapper,\n            regex : \"\\\\-?[a-zA-Z_][a-zA-Z0-9_\\\\-]*\"\n        }, {\n            caseInsensitive: true\n        }],\n\n        url: [{\n            token : \"support.function\",\n            regex : \"(?:url(:?-prefix)?|domain|regexp)\\\\(\",\n            push: [{\n                token : \"support.function\",\n                regex : \"\\\\)\",\n                next : \"pop\"\n            }, {\n                defaultToken: \"string\"\n            }]\n        }],\n\n        strings: [{\n            token : \"string.start\",\n            regex : \"'\",\n            push : [{\n                token : \"string.end\",\n                regex : \"'|$\",\n                next: \"pop\"\n            }, {\n                include : \"escapes\"\n            }, {\n                token : \"constant.language.escape\",\n                regex : /\\\\$/,\n                consumeLineEnd: true\n            }, {\n                defaultToken: \"string\"\n            }]\n        }, {\n            token : \"string.start\",\n            regex : '\"',\n            push : [{\n                token : \"string.end\",\n                regex : '\"|$',\n                next: \"pop\"\n            }, {\n                include : \"escapes\"\n            }, {\n                token : \"constant.language.escape\",\n                regex : /\\\\$/,\n                consumeLineEnd: true\n            }, {\n                defaultToken: \"string\"\n            }]\n        }],\n        escapes: [{\n            token : \"constant.language.escape\",\n            regex : /\\\\([a-fA-F\\d]{1,6}|[^a-fA-F\\d])/\n        }]\n\n    };\n\n    this.normalizeRules();\n};\n\noop.inherits(CssHighlightRules, TextHighlightRules);\n\nexports.CssHighlightRules = CssHighlightRules;\n\n});\n\nace.define(\"ace/mode/xml_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\n\nvar XmlHighlightRules = function(normalize) {\n    var tagRegex = \"[_:a-zA-Z\\xc0-\\uffff][-_:.a-zA-Z0-9\\xc0-\\uffff]*\";\n\n    this.$rules = {\n        start : [\n            {token : \"string.cdata.xml\", regex : \"<\\\\!\\\\[CDATA\\\\[\", next : \"cdata\"},\n            {\n                token : [\"punctuation.instruction.xml\", \"keyword.instruction.xml\"],\n                regex : \"(<\\\\?)(\" + tagRegex + \")\", next : \"processing_instruction\"\n            },\n            {token : \"comment.start.xml\", regex : \"<\\\\!--\", next : \"comment\"},\n            {\n                token : [\"xml-pe.doctype.xml\", \"xml-pe.doctype.xml\"],\n                regex : \"(<\\\\!)(DOCTYPE)(?=[\\\\s])\", next : \"doctype\", caseInsensitive: true\n            },\n            {include : \"tag\"},\n            {token : \"text.end-tag-open.xml\", regex: \"</\"},\n            {token : \"text.tag-open.xml\", regex: \"<\"},\n            {include : \"reference\"},\n            {defaultToken : \"text.xml\"}\n        ],\n\n        processing_instruction : [{\n            token : \"entity.other.attribute-name.decl-attribute-name.xml\",\n            regex : tagRegex\n        }, {\n            token : \"keyword.operator.decl-attribute-equals.xml\",\n            regex : \"=\"\n        }, {\n            include: \"whitespace\"\n        }, {\n            include: \"string\"\n        }, {\n            token : \"punctuation.xml-decl.xml\",\n            regex : \"\\\\?>\",\n            next : \"start\"\n        }],\n\n        doctype : [\n            {include : \"whitespace\"},\n            {include : \"string\"},\n            {token : \"xml-pe.doctype.xml\", regex : \">\", next : \"start\"},\n            {token : \"xml-pe.xml\", regex : \"[-_a-zA-Z0-9:]+\"},\n            {token : \"punctuation.int-subset\", regex : \"\\\\[\", push : \"int_subset\"}\n        ],\n\n        int_subset : [{\n            token : \"text.xml\",\n            regex : \"\\\\s+\"\n        }, {\n            token: \"punctuation.int-subset.xml\",\n            regex: \"]\",\n            next: \"pop\"\n        }, {\n            token : [\"punctuation.markup-decl.xml\", \"keyword.markup-decl.xml\"],\n            regex : \"(<\\\\!)(\" + tagRegex + \")\",\n            push : [{\n                token : \"text\",\n                regex : \"\\\\s+\"\n            },\n            {\n                token : \"punctuation.markup-decl.xml\",\n                regex : \">\",\n                next : \"pop\"\n            },\n            {include : \"string\"}]\n        }],\n\n        cdata : [\n            {token : \"string.cdata.xml\", regex : \"\\\\]\\\\]>\", next : \"start\"},\n            {token : \"text.xml\", regex : \"\\\\s+\"},\n            {token : \"text.xml\", regex : \"(?:[^\\\\]]|\\\\](?!\\\\]>))+\"}\n        ],\n\n        comment : [\n            {token : \"comment.end.xml\", regex : \"-->\", next : \"start\"},\n            {defaultToken : \"comment.xml\"}\n        ],\n\n        reference : [{\n            token : \"constant.language.escape.reference.xml\",\n            regex : \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n        }],\n\n        attr_reference : [{\n            token : \"constant.language.escape.reference.attribute-value.xml\",\n            regex : \"(?:&#[0-9]+;)|(?:&#x[0-9a-fA-F]+;)|(?:&[a-zA-Z0-9_:\\\\.-]+;)\"\n        }],\n\n        tag : [{\n            token : [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.tag-name.xml\"],\n            regex : \"(?:(<)|(</))((?:\" + tagRegex + \":)?\" + tagRegex + \")\",\n            next: [\n                {include : \"attributes\"},\n                {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\", next : \"start\"}\n            ]\n        }],\n\n        tag_whitespace : [\n            {token : \"text.tag-whitespace.xml\", regex : \"\\\\s+\"}\n        ],\n        whitespace : [\n            {token : \"text.whitespace.xml\", regex : \"\\\\s+\"}\n        ],\n        string: [{\n            token : \"string.xml\",\n            regex : \"'\",\n            push : [\n                {token : \"string.xml\", regex: \"'\", next: \"pop\"},\n                {defaultToken : \"string.xml\"}\n            ]\n        }, {\n            token : \"string.xml\",\n            regex : '\"',\n            push : [\n                {token : \"string.xml\", regex: '\"', next: \"pop\"},\n                {defaultToken : \"string.xml\"}\n            ]\n        }],\n\n        attributes: [{\n            token : \"entity.other.attribute-name.xml\",\n            regex : tagRegex\n        }, {\n            token : \"keyword.operator.attribute-equals.xml\",\n            regex : \"=\"\n        }, {\n            include: \"tag_whitespace\"\n        }, {\n            include: \"attribute_value\"\n        }],\n\n        attribute_value: [{\n            token : \"string.attribute-value.xml\",\n            regex : \"'\",\n            push : [\n                {token : \"string.attribute-value.xml\", regex: \"'\", next: \"pop\"},\n                {include : \"attr_reference\"},\n                {defaultToken : \"string.attribute-value.xml\"}\n            ]\n        }, {\n            token : \"string.attribute-value.xml\",\n            regex : '\"',\n            push : [\n                {token : \"string.attribute-value.xml\", regex: '\"', next: \"pop\"},\n                {include : \"attr_reference\"},\n                {defaultToken : \"string.attribute-value.xml\"}\n            ]\n        }]\n    };\n\n    if (this.constructor === XmlHighlightRules)\n        this.normalizeRules();\n};\n\n\n(function() {\n\n    this.embedTagRules = function(HighlightRules, prefix, tag){\n        this.$rules.tag.unshift({\n            token : [\"meta.tag.punctuation.tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n            regex : \"(<)(\" + tag + \"(?=\\\\s|>|$))\",\n            next: [\n                {include : \"attributes\"},\n                {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\", next : prefix + \"start\"}\n            ]\n        });\n\n        this.$rules[tag + \"-end\"] = [\n            {include : \"attributes\"},\n            {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\",  next: \"start\",\n                onMatch : function(value, currentState, stack) {\n                    stack.splice(0);\n                    return this.token;\n            }}\n        ];\n\n        this.embedRules(HighlightRules, prefix, [{\n            token: [\"meta.tag.punctuation.end-tag-open.xml\", \"meta.tag.\" + tag + \".tag-name.xml\"],\n            regex : \"(</)(\" + tag + \"(?=\\\\s|>|$))\",\n            next: tag + \"-end\"\n        }, {\n            token: \"string.cdata.xml\",\n            regex : \"<\\\\!\\\\[CDATA\\\\[\"\n        }, {\n            token: \"string.cdata.xml\",\n            regex : \"\\\\]\\\\]>\"\n        }]);\n    };\n\n}).call(TextHighlightRules.prototype);\n\noop.inherits(XmlHighlightRules, TextHighlightRules);\n\nexports.XmlHighlightRules = XmlHighlightRules;\n});\n\nace.define(\"ace/mode/html_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/css_highlight_rules\",\"ace/mode/javascript_highlight_rules\",\"ace/mode/xml_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar lang = acequire(\"../lib/lang\");\nvar CssHighlightRules = acequire(\"./css_highlight_rules\").CssHighlightRules;\nvar JavaScriptHighlightRules = acequire(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\nvar XmlHighlightRules = acequire(\"./xml_highlight_rules\").XmlHighlightRules;\n\nvar tagMap = lang.createMap({\n    a           : 'anchor',\n    button \t    : 'form',\n    form        : 'form',\n    img         : 'image',\n    input       : 'form',\n    label       : 'form',\n    option      : 'form',\n    script      : 'script',\n    select      : 'form',\n    textarea    : 'form',\n    style       : 'style',\n    table       : 'table',\n    tbody       : 'table',\n    td          : 'table',\n    tfoot       : 'table',\n    th          : 'table',\n    tr          : 'table'\n});\n\nvar HtmlHighlightRules = function() {\n    XmlHighlightRules.call(this);\n\n    this.addRules({\n        attributes: [{\n            include : \"tag_whitespace\"\n        }, {\n            token : \"entity.other.attribute-name.xml\",\n            regex : \"[-_a-zA-Z0-9:.]+\"\n        }, {\n            token : \"keyword.operator.attribute-equals.xml\",\n            regex : \"=\",\n            push : [{\n                include: \"tag_whitespace\"\n            }, {\n                token : \"string.unquoted.attribute-value.html\",\n                regex : \"[^<>='\\\"`\\\\s]+\",\n                next : \"pop\"\n            }, {\n                token : \"empty\",\n                regex : \"\",\n                next : \"pop\"\n            }]\n        }, {\n            include : \"attribute_value\"\n        }],\n        tag: [{\n            token : function(start, tag) {\n                var group = tagMap[tag];\n                return [\"meta.tag.punctuation.\" + (start == \"<\" ? \"\" : \"end-\") + \"tag-open.xml\",\n                    \"meta.tag\" + (group ? \".\" + group : \"\") + \".tag-name.xml\"];\n            },\n            regex : \"(</?)([-_a-zA-Z0-9:.]+)\",\n            next: \"tag_stuff\"\n        }],\n        tag_stuff: [\n            {include : \"attributes\"},\n            {token : \"meta.tag.punctuation.tag-close.xml\", regex : \"/?>\", next : \"start\"}\n        ]\n    });\n\n    this.embedTagRules(CssHighlightRules, \"css-\", \"style\");\n    this.embedTagRules(new JavaScriptHighlightRules({jsx: false}).getRules(), \"js-\", \"script\");\n\n    if (this.constructor === HtmlHighlightRules)\n        this.normalizeRules();\n};\n\noop.inherits(HtmlHighlightRules, XmlHighlightRules);\n\nexports.HtmlHighlightRules = HtmlHighlightRules;\n});\n\nace.define(\"ace/mode/markdown_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\",\"ace/mode/javascript_highlight_rules\",\"ace/mode/xml_highlight_rules\",\"ace/mode/html_highlight_rules\",\"ace/mode/css_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar lang = acequire(\"../lib/lang\");\nvar TextHighlightRules = acequire(\"./text_highlight_rules\").TextHighlightRules;\nvar JavaScriptHighlightRules = acequire(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\nvar XmlHighlightRules = acequire(\"./xml_highlight_rules\").XmlHighlightRules;\nvar HtmlHighlightRules = acequire(\"./html_highlight_rules\").HtmlHighlightRules;\nvar CssHighlightRules = acequire(\"./css_highlight_rules\").CssHighlightRules;\n\nvar escaped = function(ch) {\n    return \"(?:[^\" + lang.escapeRegExp(ch) + \"\\\\\\\\]|\\\\\\\\.)*\";\n};\n\nfunction github_embed(tag, prefix) {\n    return { // Github style block\n        token : \"support.function\",\n        regex : \"^\\\\s*```\" + tag + \"\\\\s*$\",\n        push  : prefix + \"start\"\n    };\n}\n\nvar MarkdownHighlightRules = function() {\n    HtmlHighlightRules.call(this);\n\n    this.$rules[\"start\"].unshift({\n        token : \"empty_line\",\n        regex : '^$',\n        next: \"allowBlock\"\n    }, { // h1\n        token: \"markup.heading.1\",\n        regex: \"^=+(?=\\\\s*$)\"\n    }, { // h2\n        token: \"markup.heading.2\",\n        regex: \"^\\\\-+(?=\\\\s*$)\"\n    }, {\n        token : function(value) {\n            return \"markup.heading.\" + value.length;\n        },\n        regex : /^#{1,6}(?=\\s*[^ #]|\\s+#.)/,\n        next : \"header\"\n    },\n       github_embed(\"(?:javascript|js)\", \"jscode-\"),\n       github_embed(\"xml\", \"xmlcode-\"),\n       github_embed(\"html\", \"htmlcode-\"),\n       github_embed(\"css\", \"csscode-\"),\n    { // Github style block\n        token : \"support.function\",\n        regex : \"^\\\\s*```\\\\s*\\\\S*(?:{.*?\\\\})?\\\\s*$\",\n        next  : \"githubblock\"\n    }, { // block quote\n        token : \"string.blockquote\",\n        regex : \"^\\\\s*>\\\\s*(?:[*+-]|\\\\d+\\\\.)?\\\\s+\",\n        next  : \"blockquote\"\n    }, { // HR * - _\n        token : \"constant\",\n        regex : \"^ {0,2}(?:(?: ?\\\\* ?){3,}|(?: ?\\\\- ?){3,}|(?: ?\\\\_ ?){3,})\\\\s*$\",\n        next: \"allowBlock\"\n    }, { // list\n        token : \"markup.list\",\n        regex : \"^\\\\s{0,3}(?:[*+-]|\\\\d+\\\\.)\\\\s+\",\n        next  : \"listblock-start\"\n    }, {\n        include : \"basic\"\n    });\n\n    this.addRules({\n        \"basic\" : [{\n            token : \"constant.language.escape\",\n            regex : /\\\\[\\\\`*_{}\\[\\]()#+\\-.!]/\n        }, { // code span `\n            token : \"support.function\",\n            regex : \"(`+)(.*?[^`])(\\\\1)\"\n        }, { // reference\n            token : [\"text\", \"constant\", \"text\", \"url\", \"string\", \"text\"],\n            regex : \"^([ ]{0,3}\\\\[)([^\\\\]]+)(\\\\]:\\\\s*)([^ ]+)(\\\\s*(?:[\\\"][^\\\"]+[\\\"])?(\\\\s*))$\"\n        }, { // link by reference\n            token : [\"text\", \"string\", \"text\", \"constant\", \"text\"],\n            regex : \"(\\\\[)(\" + escaped(\"]\") + \")(\\\\]\\\\s*\\\\[)(\"+ escaped(\"]\") + \")(\\\\])\"\n        }, { // link by url\n            token : [\"text\", \"string\", \"text\", \"markup.underline\", \"string\", \"text\"],\n            regex : \"(\\\\[)(\" +                                        // [\n                    escaped(\"]\") +                                    // link text\n                    \")(\\\\]\\\\()\"+                                      // ](\n                    '((?:[^\\\\)\\\\s\\\\\\\\]|\\\\\\\\.|\\\\s(?=[^\"]))*)' +        // href\n                    '(\\\\s*\"' +  escaped('\"') + '\"\\\\s*)?' +            // \"title\"\n                    \"(\\\\))\"                                           // )\n        }, { // strong ** __\n            token : \"string.strong\",\n            regex : \"([*]{2}|[_]{2}(?=\\\\S))(.*?\\\\S[*_]*)(\\\\1)\"\n        }, { // emphasis * _\n            token : \"string.emphasis\",\n            regex : \"([*]|[_](?=\\\\S))(.*?\\\\S[*_]*)(\\\\1)\"\n        }, { //\n            token : [\"text\", \"url\", \"text\"],\n            regex : \"(<)(\"+\n                      \"(?:https?|ftp|dict):[^'\\\">\\\\s]+\"+\n                      \"|\"+\n                      \"(?:mailto:)?[-.\\\\w]+\\\\@[-a-z0-9]+(?:\\\\.[-a-z0-9]+)*\\\\.[a-z]+\"+\n                    \")(>)\"\n        }],\n        \"allowBlock\": [\n            {token : \"support.function\", regex : \"^ {4}.+\", next : \"allowBlock\"},\n            {token : \"empty_line\", regex : '^$', next: \"allowBlock\"},\n            {token : \"empty\", regex : \"\", next : \"start\"}\n        ],\n\n        \"header\" : [{\n            regex: \"$\",\n            next : \"start\"\n        }, {\n            include: \"basic\"\n        }, {\n            defaultToken : \"heading\"\n        } ],\n\n        \"listblock-start\" : [{\n            token : \"support.variable\",\n            regex : /(?:\\[[ x]\\])?/,\n            next  : \"listblock\"\n        }],\n\n        \"listblock\" : [ { // Lists only escape on completely blank lines.\n            token : \"empty_line\",\n            regex : \"^$\",\n            next  : \"start\"\n        }, { // list\n            token : \"markup.list\",\n            regex : \"^\\\\s{0,3}(?:[*+-]|\\\\d+\\\\.)\\\\s+\",\n            next  : \"listblock-start\"\n        }, {\n            include : \"basic\", noEscape: true\n        }, { // Github style block\n            token : \"support.function\",\n            regex : \"^\\\\s*```\\\\s*[a-zA-Z]*(?:{.*?\\\\})?\\\\s*$\",\n            next  : \"githubblock\"\n        }, {\n            defaultToken : \"list\" //do not use markup.list to allow stling leading `*` differntly\n        } ],\n\n        \"blockquote\" : [ { // Blockquotes only escape on blank lines.\n            token : \"empty_line\",\n            regex : \"^\\\\s*$\",\n            next  : \"start\"\n        }, { // block quote\n            token : \"string.blockquote\",\n            regex : \"^\\\\s*>\\\\s*(?:[*+-]|\\\\d+\\\\.)?\\\\s+\",\n            next  : \"blockquote\"\n        }, {\n            include : \"basic\", noEscape: true\n        }, {\n            defaultToken : \"string.blockquote\"\n        } ],\n\n        \"githubblock\" : [ {\n            token : \"support.function\",\n            regex : \"^\\\\s*```\",\n            next  : \"start\"\n        }, {\n            defaultToken : \"support.function\"\n        } ]\n    });\n\n    this.embedRules(JavaScriptHighlightRules, \"jscode-\", [{\n       token : \"support.function\",\n       regex : \"^\\\\s*```\",\n       next  : \"pop\"\n    }]);\n\n    this.embedRules(HtmlHighlightRules, \"htmlcode-\", [{\n       token : \"support.function\",\n       regex : \"^\\\\s*```\",\n       next  : \"pop\"\n    }]);\n\n    this.embedRules(CssHighlightRules, \"csscode-\", [{\n       token : \"support.function\",\n       regex : \"^\\\\s*```\",\n       next  : \"pop\"\n    }]);\n\n    this.embedRules(XmlHighlightRules, \"xmlcode-\", [{\n       token : \"support.function\",\n       regex : \"^\\\\s*```\",\n       next  : \"pop\"\n    }]);\n\n    this.normalizeRules();\n};\noop.inherits(MarkdownHighlightRules, TextHighlightRules);\n\nexports.MarkdownHighlightRules = MarkdownHighlightRules;\n});\n\nace.define(\"ace/mode/mask_highlight_rules\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/lib/lang\",\"ace/mode/text_highlight_rules\",\"ace/mode/javascript_highlight_rules\",\"ace/mode/css_highlight_rules\",\"ace/mode/markdown_highlight_rules\",\"ace/mode/html_highlight_rules\"], function(acequire, exports, module) {\n\"use strict\";\n\nexports.MaskHighlightRules = MaskHighlightRules;\n\nvar oop = acequire(\"../lib/oop\");\nvar lang = acequire(\"../lib/lang\");\nvar TextRules   = acequire(\"./text_highlight_rules\").TextHighlightRules;\nvar JSRules     = acequire(\"./javascript_highlight_rules\").JavaScriptHighlightRules;\nvar CssRules    = acequire(\"./css_highlight_rules\").CssHighlightRules;\nvar MDRules     = acequire(\"./markdown_highlight_rules\").MarkdownHighlightRules;\nvar HTMLRules   = acequire(\"./html_highlight_rules\").HtmlHighlightRules;\n\nvar token_TAG       = \"keyword.support.constant.language\",\n    token_COMPO     = \"support.function.markup.bold\",\n    token_KEYWORD   = \"keyword\",\n    token_LANG      = \"constant.language\",\n    token_UTIL      = \"keyword.control.markup.italic\",\n    token_ATTR      = \"support.variable.class\",\n    token_PUNKT     = \"keyword.operator\",\n    token_ITALIC    = \"markup.italic\",\n    token_BOLD      = \"markup.bold\",\n    token_LPARE     = \"paren.lparen\",\n    token_RPARE     = \"paren.rparen\";\n\nvar const_FUNCTIONS,\n    const_KEYWORDS,\n    const_CONST,\n    const_TAGS;\n(function(){\n    const_FUNCTIONS = lang.arrayToMap(\n        (\"log\").split(\"|\")\n    );\n    const_CONST = lang.arrayToMap(\n        (\":dualbind|:bind|:import|slot|event|style|html|markdown|md\").split(\"|\")\n    );\n    const_KEYWORDS = lang.arrayToMap(\n        (\"debugger|define|var|if|each|for|of|else|switch|case|with|visible|+if|+each|+for|+switch|+with|+visible|include|import\").split(\"|\")\n    );\n    const_TAGS = lang.arrayToMap(\n        (\"a|abbr|acronym|address|applet|area|article|aside|audio|b|base|basefont|bdo|\" + \n         \"big|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|\" + \n         \"command|datalist|dd|del|details|dfn|dir|div|dl|dt|em|embed|fieldset|\" + \n         \"figcaption|figure|font|footer|form|frame|frameset|h1|h2|h3|h4|h5|h6|head|\" + \n         \"header|hgroup|hr|html|i|iframe|img|input|ins|keygen|kbd|label|legend|li|\" + \n         \"link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|\" + \n         \"option|output|p|param|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|\" + \n         \"small|source|span|strike|strong|style|sub|summary|sup|table|tbody|td|\" + \n         \"textarea|tfoot|th|thead|time|title|tr|tt|u|ul|var|video|wbr|xmp\").split(\"|\")\n    );\n}());\n\nfunction MaskHighlightRules () {\n\n    this.$rules = {\n        \"start\" : [\n            Token(\"comment\", \"\\\\/\\\\/.*$\"),\n            Token(\"comment\", \"\\\\/\\\\*\", [\n                Token(\"comment\", \".*?\\\\*\\\\/\", \"start\"),\n                Token(\"comment\", \".+\")\n            ]),\n            \n            Blocks.string(\"'''\"),\n            Blocks.string('\"\"\"'),\n            Blocks.string('\"'),\n            Blocks.string(\"'\"),\n            \n            Blocks.syntax(/(markdown|md)\\b/, \"md-multiline\", \"multiline\"),\n            Blocks.syntax(/html\\b/, \"html-multiline\", \"multiline\"),\n            Blocks.syntax(/(slot|event)\\b/, \"js-block\", \"block\"),\n            Blocks.syntax(/style\\b/, \"css-block\", \"block\"),\n            Blocks.syntax(/var\\b/, \"js-statement\", \"attr\"),\n            \n            Blocks.tag(),\n            \n            Token(token_LPARE, \"[[({>]\"),\n            Token(token_RPARE, \"[\\\\])};]\", \"start\"),\n            {\n                caseInsensitive: true\n            }\n        ]\n    };\n    var rules = this;\n    \n    addJavaScript(\"interpolation\", /\\]/, token_RPARE + \".\" + token_ITALIC);\n    addJavaScript(\"statement\", /\\)|}|;/);\n    addJavaScript(\"block\", /\\}/);\n    addCss();\n    addMarkdown();\n    addHtml();\n    \n    function addJavaScript(name, escape, closeType) {\n        var prfx  =  \"js-\" + name + \"-\",\n            rootTokens = name === \"block\" ? [\"start\"] : [\"start\", \"no_regex\"];\n        add(\n            JSRules\n            , prfx\n            , escape\n            , rootTokens\n            , closeType\n        );\n    }\n    function addCss() {\n        add(CssRules, \"css-block-\", /\\}/);\n    }\n    function addMarkdown() {\n        add(MDRules, \"md-multiline-\", /(\"\"\"|''')/, []);\n    }\n    function addHtml() {\n        add(HTMLRules, \"html-multiline-\", /(\"\"\"|''')/);\n    }\n    function add(Rules, strPrfx, rgxEnd, rootTokens, closeType) {\n        var next = \"pop\";\n        var tokens = rootTokens || [ \"start\" ];\n        if (tokens.length === 0) {\n            tokens = null;\n        }\n        if (/block|multiline/.test(strPrfx)) {\n            next = strPrfx + \"end\";\n            rules.$rules[next] = [\n                Token(\"empty\", \"\", \"start\")\n            ];\n        }\n        rules.embedRules(\n            Rules\n            , strPrfx\n            , [ Token(closeType || token_RPARE, rgxEnd, next) ]\n            , tokens\n            , tokens == null ? true : false\n        );\n    }\n\n    this.normalizeRules();\n}\noop.inherits(MaskHighlightRules, TextRules);\n\nvar Blocks = {\n    string: function(str, next){\n        var token = Token(\n            \"string.start\"\n            , str\n            , [\n                Token(token_LPARE + \".\" + token_ITALIC, /~\\[/, Blocks.interpolation()),\n                Token(\"string.end\", str, \"pop\"),\n                {\n                    defaultToken: \"string\"\n                }\n            ]\n            , next\n        );\n        if (str.length === 1){\n            var escaped = Token(\"string.escape\", \"\\\\\\\\\" + str);\n            token.push.unshift(escaped);\n        }\n        return token;\n    },\n    interpolation: function(){\n        return [\n            Token(token_UTIL, /\\s*\\w*\\s*:/),\n            \"js-interpolation-start\"\n        ];\n    },\n    tagHead: function (rgx) {\n      return Token(token_ATTR, rgx, [\n            Token(token_ATTR, /[\\w\\-_]+/),\n            Token(token_LPARE + \".\" + token_ITALIC, /~\\[/, Blocks.interpolation()),\n            Blocks.goUp()\n        ]);\n    },\n    tag: function () {\n        return {\n            token: 'tag',\n            onMatch :  function(value) {\n                if (void 0 !== const_KEYWORDS[value])\n                    return token_KEYWORD;\n                if (void 0 !== const_CONST[value])\n                    return token_LANG;\n                if (void 0 !== const_FUNCTIONS[value])\n                    return \"support.function\";\n                if (void 0 !== const_TAGS[value.toLowerCase()])\n                    return token_TAG;\n                \n                return token_COMPO;\n            },\n            regex : /([@\\w\\-_:+]+)|((^|\\s)(?=\\s*(\\.|#)))/,\n            push: [\n                Blocks.tagHead(/\\./) ,\n                Blocks.tagHead(/#/) ,\n                Blocks.expression(),\n                Blocks.attribute(),\n                \n                Token(token_LPARE, /[;>{]/, \"pop\")\n            ]\n        };\n    },\n    syntax: function(rgx, next, type){\n        return {\n            token: token_LANG,\n            regex : rgx,\n            push: ({\n                \"attr\": [\n                    next + \"-start\",\n                    Token(token_PUNKT, /;/, \"start\")\n                ],\n                \"multiline\": [\n                    Blocks.tagHead(/\\./) ,\n                    Blocks.tagHead(/#/) ,\n                    Blocks.attribute(),\n                    Blocks.expression(),\n                    Token(token_LPARE, /[>\\{]/),\n                    Token(token_PUNKT, /;/, \"start\"),\n                    Token(token_LPARE, /'''|\"\"\"/, [ next + \"-start\" ])\n                ],\n                \"block\": [\n                    Blocks.tagHead(/\\./) ,\n                    Blocks.tagHead(/#/) ,\n                    Blocks.attribute(),\n                    Blocks.expression(),\n                    Token(token_LPARE, /\\{/, [ next + \"-start\" ])\n                ]\n            })[type]\n        };\n    },\n    attribute: function(){\n        return Token(function(value){\n            return  /^x\\-/.test(value)\n                ? token_ATTR + \".\" + token_BOLD\n                : token_ATTR;\n        }, /[\\w_-]+/, [\n            Token(token_PUNKT, /\\s*=\\s*/, [\n                Blocks.string('\"'),\n                Blocks.string(\"'\"),\n                Blocks.word(),\n                Blocks.goUp()\n            ]),\n            Blocks.goUp()\n        ]);\n    },\n    expression: function(){\n        return Token(token_LPARE, /\\(/, [ \"js-statement-start\" ]);\n    },\n    word: function(){\n        return Token(\"string\", /[\\w-_]+/);\n    },\n    goUp: function(){\n        return Token(\"text\", \"\", \"pop\");\n    },\n    goStart: function(){\n        return Token(\"text\", \"\", \"start\");\n    }\n};\n\n\nfunction Token(token, rgx, mix) {\n    var push, next, onMatch;\n    if (arguments.length === 4) {\n        push = mix;\n        next = arguments[3];\n    }\n    else if (typeof mix === \"string\") {\n        next = mix;\n    }\n    else {\n        push = mix;\n    }\n    if (typeof token === \"function\") {\n        onMatch = token;\n        token   = \"empty\";\n    }\n    return {\n        token: token,\n        regex: rgx,\n        push: push,\n        next: next,\n        onMatch: onMatch\n    };\n}\n\n});\n\nace.define(\"ace/mode/matching_brace_outdent\",[\"require\",\"exports\",\"module\",\"ace/range\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar Range = acequire(\"../range\").Range;\n\nvar MatchingBraceOutdent = function() {};\n\n(function() {\n\n    this.checkOutdent = function(line, input) {\n        if (! /^\\s+$/.test(line))\n            return false;\n\n        return /^\\s*\\}/.test(input);\n    };\n\n    this.autoOutdent = function(doc, row) {\n        var line = doc.getLine(row);\n        var match = line.match(/^(\\s*\\})/);\n\n        if (!match) return 0;\n\n        var column = match[1].length;\n        var openBracePos = doc.findMatchingBracket({row: row, column: column});\n\n        if (!openBracePos || openBracePos.row == row) return 0;\n\n        var indent = this.$getIndent(doc.getLine(openBracePos.row));\n        doc.replace(new Range(row, 0, row, column-1), indent);\n    };\n\n    this.$getIndent = function(line) {\n        return line.match(/^\\s*/)[0];\n    };\n\n}).call(MatchingBraceOutdent.prototype);\n\nexports.MatchingBraceOutdent = MatchingBraceOutdent;\n});\n\nace.define(\"ace/mode/behaviour/css\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/behaviour\",\"ace/mode/behaviour/cstyle\",\"ace/token_iterator\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Behaviour = acequire(\"../behaviour\").Behaviour;\nvar CstyleBehaviour = acequire(\"./cstyle\").CstyleBehaviour;\nvar TokenIterator = acequire(\"../../token_iterator\").TokenIterator;\n\nvar CssBehaviour = function () {\n\n    this.inherit(CstyleBehaviour);\n\n    this.add(\"colon\", \"insertion\", function (state, action, editor, session, text) {\n        if (text === ':') {\n            var cursor = editor.getCursorPosition();\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n            if (token && token.value.match(/\\s+/)) {\n                token = iterator.stepBackward();\n            }\n            if (token && token.type === 'support.type') {\n                var line = session.doc.getLine(cursor.row);\n                var rightChar = line.substring(cursor.column, cursor.column + 1);\n                if (rightChar === ':') {\n                    return {\n                       text: '',\n                       selection: [1, 1]\n                    };\n                }\n                if (!line.substring(cursor.column).match(/^\\s*;/)) {\n                    return {\n                       text: ':;',\n                       selection: [1, 1]\n                    };\n                }\n            }\n        }\n    });\n\n    this.add(\"colon\", \"deletion\", function (state, action, editor, session, range) {\n        var selected = session.doc.getTextRange(range);\n        if (!range.isMultiLine() && selected === ':') {\n            var cursor = editor.getCursorPosition();\n            var iterator = new TokenIterator(session, cursor.row, cursor.column);\n            var token = iterator.getCurrentToken();\n            if (token && token.value.match(/\\s+/)) {\n                token = iterator.stepBackward();\n            }\n            if (token && token.type === 'support.type') {\n                var line = session.doc.getLine(range.start.row);\n                var rightChar = line.substring(range.end.column, range.end.column + 1);\n                if (rightChar === ';') {\n                    range.end.column ++;\n                    return range;\n                }\n            }\n        }\n    });\n\n    this.add(\"semicolon\", \"insertion\", function (state, action, editor, session, text) {\n        if (text === ';') {\n            var cursor = editor.getCursorPosition();\n            var line = session.doc.getLine(cursor.row);\n            var rightChar = line.substring(cursor.column, cursor.column + 1);\n            if (rightChar === ';') {\n                return {\n                   text: '',\n                   selection: [1, 1]\n                };\n            }\n        }\n    });\n\n};\noop.inherits(CssBehaviour, CstyleBehaviour);\n\nexports.CssBehaviour = CssBehaviour;\n});\n\nace.define(\"ace/mode/folding/cstyle\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/range\",\"ace/mode/folding/fold_mode\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../../lib/oop\");\nvar Range = acequire(\"../../range\").Range;\nvar BaseFoldMode = acequire(\"./fold_mode\").FoldMode;\n\nvar FoldMode = exports.FoldMode = function(commentRegex) {\n    if (commentRegex) {\n        this.foldingStartMarker = new RegExp(\n            this.foldingStartMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.start)\n        );\n        this.foldingStopMarker = new RegExp(\n            this.foldingStopMarker.source.replace(/\\|[^|]*?$/, \"|\" + commentRegex.end)\n        );\n    }\n};\noop.inherits(FoldMode, BaseFoldMode);\n\n(function() {\n    \n    this.foldingStartMarker = /([\\{\\[\\(])[^\\}\\]\\)]*$|^\\s*(\\/\\*)/;\n    this.foldingStopMarker = /^[^\\[\\{\\(]*([\\}\\]\\)])|^[\\s\\*]*(\\*\\/)/;\n    this.singleLineBlockCommentRe= /^\\s*(\\/\\*).*\\*\\/\\s*$/;\n    this.tripleStarBlockCommentRe = /^\\s*(\\/\\*\\*\\*).*\\*\\/\\s*$/;\n    this.startRegionRe = /^\\s*(\\/\\*|\\/\\/)#?region\\b/;\n    this._getFoldWidgetBase = this.getFoldWidget;\n    this.getFoldWidget = function(session, foldStyle, row) {\n        var line = session.getLine(row);\n    \n        if (this.singleLineBlockCommentRe.test(line)) {\n            if (!this.startRegionRe.test(line) && !this.tripleStarBlockCommentRe.test(line))\n                return \"\";\n        }\n    \n        var fw = this._getFoldWidgetBase(session, foldStyle, row);\n    \n        if (!fw && this.startRegionRe.test(line))\n            return \"start\"; // lineCommentRegionStart\n    \n        return fw;\n    };\n\n    this.getFoldWidgetRange = function(session, foldStyle, row, forceMultiline) {\n        var line = session.getLine(row);\n        \n        if (this.startRegionRe.test(line))\n            return this.getCommentRegionBlock(session, line, row);\n        \n        var match = line.match(this.foldingStartMarker);\n        if (match) {\n            var i = match.index;\n\n            if (match[1])\n                return this.openingBracketBlock(session, match[1], row, i);\n                \n            var range = session.getCommentFoldRange(row, i + match[0].length, 1);\n            \n            if (range && !range.isMultiLine()) {\n                if (forceMultiline) {\n                    range = this.getSectionRange(session, row);\n                } else if (foldStyle != \"all\")\n                    range = null;\n            }\n            \n            return range;\n        }\n\n        if (foldStyle === \"markbegin\")\n            return;\n\n        var match = line.match(this.foldingStopMarker);\n        if (match) {\n            var i = match.index + match[0].length;\n\n            if (match[1])\n                return this.closingBracketBlock(session, match[1], row, i);\n\n            return session.getCommentFoldRange(row, i, -1);\n        }\n    };\n    \n    this.getSectionRange = function(session, row) {\n        var line = session.getLine(row);\n        var startIndent = line.search(/\\S/);\n        var startRow = row;\n        var startColumn = line.length;\n        row = row + 1;\n        var endRow = row;\n        var maxRow = session.getLength();\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var indent = line.search(/\\S/);\n            if (indent === -1)\n                continue;\n            if  (startIndent > indent)\n                break;\n            var subRange = this.getFoldWidgetRange(session, \"all\", row);\n            \n            if (subRange) {\n                if (subRange.start.row <= startRow) {\n                    break;\n                } else if (subRange.isMultiLine()) {\n                    row = subRange.end.row;\n                } else if (startIndent == indent) {\n                    break;\n                }\n            }\n            endRow = row;\n        }\n        \n        return new Range(startRow, startColumn, endRow, session.getLine(endRow).length);\n    };\n    this.getCommentRegionBlock = function(session, line, row) {\n        var startColumn = line.search(/\\s*$/);\n        var maxRow = session.getLength();\n        var startRow = row;\n        \n        var re = /^\\s*(?:\\/\\*|\\/\\/|--)#?(end)?region\\b/;\n        var depth = 1;\n        while (++row < maxRow) {\n            line = session.getLine(row);\n            var m = re.exec(line);\n            if (!m) continue;\n            if (m[1]) depth--;\n            else depth++;\n\n            if (!depth) break;\n        }\n\n        var endRow = row;\n        if (endRow > startRow) {\n            return new Range(startRow, startColumn, endRow, line.length);\n        }\n    };\n\n}).call(FoldMode.prototype);\n\n});\n\nace.define(\"ace/mode/mask\",[\"require\",\"exports\",\"module\",\"ace/lib/oop\",\"ace/mode/text\",\"ace/mode/mask_highlight_rules\",\"ace/mode/matching_brace_outdent\",\"ace/mode/behaviour/css\",\"ace/mode/folding/cstyle\"], function(acequire, exports, module) {\n\"use strict\";\n\nvar oop = acequire(\"../lib/oop\");\nvar TextMode = acequire(\"./text\").Mode;\nvar MaskHighlightRules = acequire(\"./mask_highlight_rules\").MaskHighlightRules;\nvar MatchingBraceOutdent = acequire(\"./matching_brace_outdent\").MatchingBraceOutdent;\nvar CssBehaviour = acequire(\"./behaviour/css\").CssBehaviour;\nvar CStyleFoldMode = acequire(\"./folding/cstyle\").FoldMode;\n\nvar Mode = function() {\n    this.HighlightRules = MaskHighlightRules;\n    this.$outdent = new MatchingBraceOutdent();\n    this.$behaviour = new CssBehaviour();\n    this.foldingRules = new CStyleFoldMode();\n};\noop.inherits(Mode, TextMode);\n\n(function() {\n   \n    this.lineCommentStart = \"//\";\n    this.blockComment = {start: \"/*\", end: \"*/\"};\n\n    this.getNextLineIndent = function(state, line, tab) {\n        var indent = this.$getIndent(line);\n        var tokens = this.getTokenizer().getLineTokens(line, state).tokens;\n        if (tokens.length && tokens[tokens.length-1].type == \"comment\") {\n            return indent;\n        }\n\n        var match = line.match(/^.*\\{\\s*$/);\n        if (match) {\n            indent += tab;\n        }\n\n        return indent;\n    };\n\n    this.checkOutdent = function(state, line, input) {\n        return this.$outdent.checkOutdent(line, input);\n    };\n\n    this.autoOutdent = function(state, doc, row) {\n        this.$outdent.autoOutdent(doc, row);\n    };\n\n    this.$id = \"ace/mode/mask\";\n}).call(Mode.prototype);\n\nexports.Mode = Mode;\n\n});\n"],"sourceRoot":""}